

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed May 19 11:59:08 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4550 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  000EF8                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for LCD_config@F3330
    76  000EF8  30                 	db	48
    77  000EF9  30                 	db	48
    78  000EFA  30                 	db	48
    79  000EFB  38                 	db	56
    80  000EFC  0F                 	db	15
    81  000EFD  06                 	db	6
    82  000EFE  01                 	db	1
    83                           
    84                           ;initializer for _doorStatus
    85  000EFF  04                 	db	4
    86  0000                     _INTCON2bits	set	4081
    87  0000                     _INTCON3bits	set	4080
    88  0000                     _INTCONbits	set	4082
    89  0000                     _RCONbits	set	4048
    90  0000                     _PORTD	set	3971
    91  0000                     _PORTEbits	set	3972
    92  0000                     _TRISE	set	3990
    93  0000                     _TRISD	set	3989
    94                           
    95                           	psect	smallconst
    96  000800                     __psmallconst:
    97                           	callstack 0
    98  000800  00                 	db	0
    99  000801                     STR_1:
   100  000801  49                 	db	73	;'I'
   101  000802  6E                 	db	110	;'n'
   102  000803  69                 	db	105	;'i'
   103  000804  63                 	db	99	;'c'
   104  000805  69                 	db	105	;'i'
   105  000806  61                 	db	97	;'a'
   106  000807  6C                 	db	108	;'l'
   107  000808  69                 	db	105	;'i'
   108  000809  7A                 	db	122	;'z'
   109  00080A  61                 	db	97	;'a'
   110  00080B  6E                 	db	110	;'n'
   111  00080C  64                 	db	100	;'d'
   112  00080D  6F                 	db	111	;'o'
   113  00080E  00                 	db	0
   114  00080F                     STR_5:
   115  00080F  46                 	db	70	;'F'
   116  000810  65                 	db	101	;'e'
   117  000811  63                 	db	99	;'c'
   118  000812  68                 	db	104	;'h'
   119  000813  61                 	db	97	;'a'
   120  000814  64                 	db	100	;'d'
   121  000815  61                 	db	97	;'a'
   122  000816  20                 	db	32
   123  000817  20                 	db	32
   124  000818  20                 	db	32
   125  000819  20                 	db	32
   126  00081A  00                 	db	0
   127  00081B                     STR_10:
   128  00081B  46                 	db	70	;'F'
   129  00081C  65                 	db	101	;'e'
   130  00081D  63                 	db	99	;'c'
   131  00081E  68                 	db	104	;'h'
   132  00081F  61                 	db	97	;'a'
   133  000820  6E                 	db	110	;'n'
   134  000821  64                 	db	100	;'d'
   135  000822  6F                 	db	111	;'o'
   136  000823  2E                 	db	46
   137  000824  2E                 	db	46
   138  000825  2E                 	db	46
   139  000826  00                 	db	0
   140  000827                     STR_2:
   141  000827  43                 	db	67	;'C'
   142  000828  4F                 	db	79	;'O'
   143  000829  4E                 	db	78	;'N'
   144  00082A  54                 	db	84	;'T'
   145  00082B  52                 	db	82	;'R'
   146  00082C  4F                 	db	79	;'O'
   147  00082D  4C                 	db	76	;'L'
   148  00082E  41                 	db	65	;'A'
   149  00082F  44                 	db	68	;'D'
   150  000830  4F                 	db	79	;'O'
   151  000831  52                 	db	82	;'R'
   152  000832  00                 	db	0
   153  000833                     STR_8:
   154  000833  41                 	db	65	;'A'
   155  000834  62                 	db	98	;'b'
   156  000835  65                 	db	101	;'e'
   157  000836  72                 	db	114	;'r'
   158  000837  74                 	db	116	;'t'
   159  000838  61                 	db	97	;'a'
   160  000839  20                 	db	32
   161  00083A  20                 	db	32
   162  00083B  20                 	db	32
   163  00083C  20                 	db	32
   164  00083D  00                 	db	0
   165  00083E                     STR_12:
   166  00083E  49                 	db	73	;'I'
   167  00083F  4E                 	db	78	;'N'
   168  000840  43                 	db	67	;'C'
   169  000841  45                 	db	69	;'E'
   170  000842  4E                 	db	78	;'N'
   171  000843  44                 	db	68	;'D'
   172  000844  49                 	db	73	;'I'
   173  000845  4F                 	db	79	;'O'
   174  000846  21                 	db	33
   175  000847  21                 	db	33
   176  000848  00                 	db	0
   177  000849                     STR_7:
   178  000849  41                 	db	65	;'A'
   179  00084A  62                 	db	98	;'b'
   180  00084B  72                 	db	114	;'r'
   181  00084C  69                 	db	105	;'i'
   182  00084D  6E                 	db	110	;'n'
   183  00084E  64                 	db	100	;'d'
   184  00084F  6F                 	db	111	;'o'
   185  000850  2E                 	db	46
   186  000851  2E                 	db	46
   187  000852  2E                 	db	46
   188  000853  00                 	db	0
   189  000854                     STR_13:
   190  000854  45                 	db	69	;'E'
   191  000855  6D                 	db	109	;'m'
   192  000856  65                 	db	101	;'e'
   193  000857  72                 	db	114	;'r'
   194  000858  67                 	db	103	;'g'
   195  000859  65                 	db	101	;'e'
   196  00085A  6E                 	db	110	;'n'
   197  00085B  63                 	db	99	;'c'
   198  00085C  69                 	db	105	;'i'
   199  00085D  61                 	db	97	;'a'
   200  00085E  00                 	db	0
   201  00085F  49                 	db	73	;'I'
   202  000860  4E                 	db	78	;'N'
   203  000861  56                 	db	86	;'V'
   204  000862  41                 	db	65	;'A'
   205  000863  53                 	db	83	;'S'
   206  000864  41                 	db	65	;'A'
   207  000865  4F                 	db	79	;'O'
   208  000866  21                 	db	33
   209  000867  21                 	db	33
   210  000868  00                 	db	0
   211  000869                     STR_3:
   212  000869  44                 	db	68	;'D'
   213  00086A  41                 	db	65	;'A'
   214  00086B  20                 	db	32
   215  00086C  50                 	db	80	;'P'
   216  00086D  4F                 	db	79	;'O'
   217  00086E  52                 	db	82	;'R'
   218  00086F  54                 	db	84	;'T'
   219  000870  41                 	db	65	;'A'
   220  000871  00                 	db	0
   221  000872                     STR_4:
   222  000872  53                 	db	83	;'S'
   223  000873  74                 	db	116	;'t'
   224  000874  61                 	db	97	;'a'
   225  000875  74                 	db	116	;'t'
   226  000876  75                 	db	117	;'u'
   227  000877  73                 	db	115	;'s'
   228  000878  3A                 	db	58	;':'
   229  000879  00                 	db	0
   230  00087A  00                 	db	0	; dummy byte at the end
   231  0000                     
   232                           ; #config settings
   233                           
   234                           	psect	cinit
   235  000E10                     __pcinit:
   236                           	callstack 0
   237  000E10                     start_initialization:
   238                           	callstack 0
   239  000E10                     __initialization:
   240                           	callstack 0
   241                           
   242                           ; Initialize objects allocated to COMRAM (8 bytes)
   243                           ; load TBLPTR registers with __pidataCOMRAM
   244  000E10  0EF8               	movlw	low __pidataCOMRAM
   245  000E12  6EF6               	movwf	tblptrl,c
   246  000E14  0E0E               	movlw	high __pidataCOMRAM
   247  000E16  6EF7               	movwf	tblptrh,c
   248  000E18  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   249  000E1A  6EF8               	movwf	tblptru,c
   250  000E1C  EE00  F029         	lfsr	0,__pdataCOMRAM
   251  000E20  EE10 F008          	lfsr	1,8
   252  000E24                     copy_data0:
   253  000E24  0009               	tblrd		*+
   254  000E26  CFF5 FFEE          	movff	tablat,postinc0
   255  000E2A  50E5               	movf	postdec1,w,c
   256  000E2C  50E1               	movf	fsr1l,w,c
   257  000E2E  E1FA               	bnz	copy_data0
   258  000E30                     end_of_initialization:
   259                           	callstack 0
   260  000E30                     __end_of__initialization:
   261                           	callstack 0
   262  000E30  9031               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   263  000E32  9231               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   264  000E34  0E00               	movlw	low (__Lmediumconst shr (0+16))
   265  000E36  6EF8               	movwf	tblptru,c
   266  000E38  0100               	movlb	0
   267  000E3A  EF6B  F007         	goto	_main	;jump to C main() function
   268                           
   269                           	psect	dataCOMRAM
   270  000029                     __pdataCOMRAM:
   271                           	callstack 0
   272  000029                     LCD_config@F3330:
   273                           	callstack 0
   274  000029                     	ds	7
   275  000030                     _doorStatus:
   276                           	callstack 0
   277  000030                     	ds	1
   278                           
   279                           	psect	cstackCOMRAM
   280  000001                     __pcstackCOMRAM:
   281                           	callstack 0
   282  000001                     ?i2_strlen:
   283                           	callstack 0
   284  000001                     i2LCD_placeCursorInPosition@position:
   285                           	callstack 0
   286  000001                     i2strlen@s:
   287                           	callstack 0
   288  000001                     i2LCD_customDelay_ms@ms:
   289                           	callstack 0
   290                           
   291                           ; 4 bytes @ 0x0
   292  000001                     	ds	2
   293  000003                     i2strlen@a:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x2
   297  000003                     	ds	2
   298  000005                     i2LCD_print@text:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x4
   302  000005                     	ds	2
   303  000007                     i2LCD_print@delay:
   304                           	callstack 0
   305                           
   306                           ; 4 bytes @ 0x6
   307  000007                     	ds	4
   308  00000B                     ??i2_LCD_print:
   309                           
   310                           ; 1 bytes @ 0xA
   311  00000B                     	ds	2
   312  00000D                     i2LCD_print@length:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0xC
   316  00000D                     	ds	2
   317  00000F                     i2LCD_print@i:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0xE
   321  00000F                     	ds	2
   322  000011                     ??_interrupt_service_routine:
   323                           
   324                           ; 1 bytes @ 0x10
   325  000011                     	ds	6
   326  000017                     ?_strlen:
   327                           	callstack 0
   328  000017                     LCD_placeCursorInPosition@position:
   329                           	callstack 0
   330  000017                     strlen@s:
   331                           	callstack 0
   332  000017                     LCD_customDelay_ms@ms:
   333                           	callstack 0
   334  000017                     LCD_config@config:
   335                           	callstack 0
   336                           
   337                           ; 7 bytes @ 0x16
   338  000017                     	ds	2
   339  000019                     strlen@a:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x18
   343  000019                     	ds	2
   344  00001B                     LCD_print@text:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x1A
   348  00001B                     	ds	2
   349  00001D                     LCD_print@delay:
   350                           	callstack 0
   351                           
   352                           ; 4 bytes @ 0x1C
   353  00001D                     	ds	1
   354  00001E                     LCD_config@i:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x1D
   358  00001E                     	ds	3
   359  000021                     ??_LCD_print:
   360                           
   361                           ; 1 bytes @ 0x20
   362  000021                     	ds	2
   363  000023                     LCD_print@length:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x22
   367  000023                     	ds	2
   368  000025                     LCD_print@i:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x24
   372  000025                     	ds	2
   373  000027                     ??_doorController_init:
   374                           
   375                           ; 1 bytes @ 0x26
   376  000027                     	ds	2
   377  000029                     
   378                           ; 1 bytes @ 0x28
   379 ;;
   380 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   381 ;;
   382 ;; *************** function _main *****************
   383 ;; Defined at:
   384 ;;		line 9 in file "main.c"
   385 ;; Parameters:    Size  Location     Type
   386 ;;		None
   387 ;; Auto vars:     Size  Location     Type
   388 ;;		None
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   398 ;;      Params:         0       0       0       0       0       0       0       0       0
   399 ;;      Locals:         0       0       0       0       0       0       0       0       0
   400 ;;      Temps:          0       0       0       0       0       0       0       0       0
   401 ;;      Totals:         0       0       0       0       0       0       0       0       0
   402 ;;Total ram usage:        0 bytes
   403 ;; Hardware stack levels required when called: 7
   404 ;; This function calls:
   405 ;;		_LCD_config
   406 ;;		_LCD_init
   407 ;;		_doorController_init
   408 ;;		_interrupt_config
   409 ;; This function is called by:
   410 ;;		Startup code after reset
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           	psect	text0
   415  000ED6                     __ptext0:
   416                           	callstack 0
   417  000ED6                     _main:
   418                           	callstack 24
   419  000ED6                     
   420                           ;main.c: 11:  LCD_init();
   421  000ED6  EC77  F007         	call	_LCD_init	;wreg free
   422  000EDA                     
   423                           ;main.c: 12:  LCD_config();
   424  000EDA  EC3B  F006         	call	_LCD_config	;wreg free
   425  000EDE                     
   426                           ;main.c: 14:  interrupt_config();
   427  000EDE  EC5D  F007         	call	_interrupt_config	;wreg free
   428  000EE2                     
   429                           ;main.c: 16:  doorController_init();
   430  000EE2  ECD1  F004         	call	_doorController_init	;wreg free
   431  000EE6                     l65:
   432  000EE6  EF73  F007         	goto	l65
   433  000EEA  EF07  F000         	goto	start
   434  000EEE                     __end_of_main:
   435                           	callstack 0
   436                           
   437 ;; *************** function _interrupt_config *****************
   438 ;; Defined at:
   439 ;;		line 28 in file "main.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;		None
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		None
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   453 ;;      Params:         0       0       0       0       0       0       0       0       0
   454 ;;      Locals:         0       0       0       0       0       0       0       0       0
   455 ;;      Temps:          0       0       0       0       0       0       0       0       0
   456 ;;      Totals:         0       0       0       0       0       0       0       0       0
   457 ;;Total ram usage:        0 bytes
   458 ;; Hardware stack levels used: 1
   459 ;; Hardware stack levels required when called: 4
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	text1
   468  000EBA                     __ptext1:
   469                           	callstack 0
   470  000EBA                     _interrupt_config:
   471                           	callstack 26
   472  000EBA                     
   473                           ;main.c: 31:  RCONbits.IPEN = 1;
   474  000EBA  8ED0               	bsf	208,7,c	;volatile
   475                           
   476                           ;main.c: 34:  INTCONbits.GIEH = 1;
   477  000EBC  8EF2               	bsf	242,7,c	;volatile
   478                           
   479                           ;main.c: 35:  INTCONbits.GIEL = 0;
   480  000EBE  9CF2               	bcf	242,6,c	;volatile
   481                           
   482                           ;main.c: 38:  INTCONbits.INT0IF = 0;
   483  000EC0  92F2               	bcf	242,1,c	;volatile
   484                           
   485                           ;main.c: 39:  INTCONbits.INT0IE = 1;
   486  000EC2  88F2               	bsf	242,4,c	;volatile
   487                           
   488                           ;main.c: 41:  INTCON3bits.INT1F = 0;
   489  000EC4  90F0               	bcf	240,0,c	;volatile
   490                           
   491                           ;main.c: 42:  INTCON3bits.INT1IP = 1;
   492  000EC6  8CF0               	bsf	240,6,c	;volatile
   493                           
   494                           ;main.c: 43:  INTCON2bits.INTEDG1 = 0;
   495  000EC8  9AF1               	bcf	241,5,c	;volatile
   496                           
   497                           ;main.c: 44:  INTCON3bits.INT1IE = 1;
   498  000ECA  86F0               	bsf	240,3,c	;volatile
   499                           
   500                           ;main.c: 46:  INTCON3bits.INT2IF = 0;
   501  000ECC  92F0               	bcf	240,1,c	;volatile
   502                           
   503                           ;main.c: 47:  INTCON3bits.INT2IP = 1;
   504  000ECE  8EF0               	bsf	240,7,c	;volatile
   505                           
   506                           ;main.c: 48:  INTCON2bits.INTEDG2 = 0;
   507  000ED0  98F1               	bcf	241,4,c	;volatile
   508                           
   509                           ;main.c: 49:  INTCON3bits.INT2IE = 1;
   510  000ED2  88F0               	bsf	240,4,c	;volatile
   511  000ED4  0012               	return		;funcret
   512  000ED6                     __end_of_interrupt_config:
   513                           	callstack 0
   514                           
   515 ;; *************** function _doorController_init *****************
   516 ;; Defined at:
   517 ;;		line 93 in file "main.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;		None
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   531 ;;      Params:         0       0       0       0       0       0       0       0       0
   532 ;;      Locals:         0       0       0       0       0       0       0       0       0
   533 ;;      Temps:          2       0       0       0       0       0       0       0       0
   534 ;;      Totals:         2       0       0       0       0       0       0       0       0
   535 ;;Total ram usage:        2 bytes
   536 ;; Hardware stack levels used: 1
   537 ;; Hardware stack levels required when called: 6
   538 ;; This function calls:
   539 ;;		_LCD_clearScreen
   540 ;;		_LCD_placeCursorInPosition
   541 ;;		_LCD_print
   542 ;; This function is called by:
   543 ;;		_main
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           	psect	text2
   548  0009A2                     __ptext2:
   549                           	callstack 0
   550  0009A2                     _doorController_init:
   551                           	callstack 24
   552  0009A2                     
   553                           ;main.c: 95:  LCD_clearScreen();
   554  0009A2  EC3F  F007         	call	_LCD_clearScreen	;wreg free
   555  0009A6                     
   556                           ;main.c: 100:  LCD_placeCursorInPosition(0x81);
   557  0009A6  0E81               	movlw	129
   558  0009A8  EC1F  F007         	call	_LCD_placeCursorInPosition
   559  0009AC                     
   560                           ;main.c: 101:  LCD_print("Inicializando", 32);
   561  0009AC  0E01               	movlw	low STR_1
   562  0009AE  6E1B               	movwf	LCD_print@text^0,c
   563  0009B0  0E08               	movlw	high STR_1
   564  0009B2  6E1C               	movwf	(LCD_print@text+1)^0,c
   565  0009B4  0E20               	movlw	32
   566  0009B6  6E1D               	movwf	LCD_print@delay^0,c
   567  0009B8  0E00               	movlw	0
   568  0009BA  6E1E               	movwf	(LCD_print@delay+1)^0,c
   569  0009BC  0E00               	movlw	0
   570  0009BE  6E1F               	movwf	(LCD_print@delay+2)^0,c
   571  0009C0  0E00               	movlw	0
   572  0009C2  6E20               	movwf	(LCD_print@delay+3)^0,c
   573  0009C4  ECBD  F005         	call	_LCD_print	;wreg free
   574  0009C8                     
   575                           ;main.c: 102:  LCD_placeCursorInPosition(0x92);
   576  0009C8  0E92               	movlw	146
   577  0009CA  EC1F  F007         	call	_LCD_placeCursorInPosition
   578  0009CE                     
   579                           ;main.c: 103:  LCD_print("CONTROLADOR", 32);
   580  0009CE  0E27               	movlw	low STR_2
   581  0009D0  6E1B               	movwf	LCD_print@text^0,c
   582  0009D2  0E08               	movlw	high STR_2
   583  0009D4  6E1C               	movwf	(LCD_print@text+1)^0,c
   584  0009D6  0E20               	movlw	32
   585  0009D8  6E1D               	movwf	LCD_print@delay^0,c
   586  0009DA  0E00               	movlw	0
   587  0009DC  6E1E               	movwf	(LCD_print@delay+1)^0,c
   588  0009DE  0E00               	movlw	0
   589  0009E0  6E1F               	movwf	(LCD_print@delay+2)^0,c
   590  0009E2  0E00               	movlw	0
   591  0009E4  6E20               	movwf	(LCD_print@delay+3)^0,c
   592  0009E6  ECBD  F005         	call	_LCD_print	;wreg free
   593  0009EA                     
   594                           ;main.c: 104:  LCD_placeCursorInPosition(0xD2);
   595  0009EA  0ED2               	movlw	210
   596  0009EC  EC1F  F007         	call	_LCD_placeCursorInPosition
   597  0009F0                     
   598                           ;main.c: 105:  LCD_print("DA PORTA", 32);
   599  0009F0  0E69               	movlw	low STR_3
   600  0009F2  6E1B               	movwf	LCD_print@text^0,c
   601  0009F4  0E08               	movlw	high STR_3
   602  0009F6  6E1C               	movwf	(LCD_print@text+1)^0,c
   603  0009F8  0E20               	movlw	32
   604  0009FA  6E1D               	movwf	LCD_print@delay^0,c
   605  0009FC  0E00               	movlw	0
   606  0009FE  6E1E               	movwf	(LCD_print@delay+1)^0,c
   607  000A00  0E00               	movlw	0
   608  000A02  6E1F               	movwf	(LCD_print@delay+2)^0,c
   609  000A04  0E00               	movlw	0
   610  000A06  6E20               	movwf	(LCD_print@delay+3)^0,c
   611  000A08  ECBD  F005         	call	_LCD_print	;wreg free
   612  000A0C                     
   613                           ;main.c: 106:  _delay((unsigned long)((976)*(4000000/4000.0)));
   614  000A0C  0E05               	movlw	5
   615  000A0E  6E28               	movwf	(??_doorController_init+1)^0,c
   616  000A10  0EF4               	movlw	244
   617  000A12  6E27               	movwf	??_doorController_init^0,c
   618  000A14  0E83               	movlw	131
   619  000A16                     u297:
   620  000A16  2EE8               	decfsz	wreg,f,c
   621  000A18  D7FE               	bra	u297
   622  000A1A  2E27               	decfsz	??_doorController_init^0,f,c
   623  000A1C  D7FC               	bra	u297
   624  000A1E  2E28               	decfsz	(??_doorController_init+1)^0,f,c
   625  000A20  D7FA               	bra	u297
   626  000A22  F000               	nop	
   627  000A24                     
   628                           ;main.c: 109:  LCD_clearScreen();
   629  000A24  EC3F  F007         	call	_LCD_clearScreen	;wreg free
   630  000A28                     
   631                           ;main.c: 110:  LCD_placeCursorInPosition(0x81);
   632  000A28  0E81               	movlw	129
   633  000A2A  EC1F  F007         	call	_LCD_placeCursorInPosition
   634  000A2E                     
   635                           ;main.c: 111:  LCD_print("Status:", 10);
   636  000A2E  0E72               	movlw	low STR_4
   637  000A30  6E1B               	movwf	LCD_print@text^0,c
   638  000A32  0E08               	movlw	high STR_4
   639  000A34  6E1C               	movwf	(LCD_print@text+1)^0,c
   640  000A36  0E0A               	movlw	10
   641  000A38  6E1D               	movwf	LCD_print@delay^0,c
   642  000A3A  0E00               	movlw	0
   643  000A3C  6E1E               	movwf	(LCD_print@delay+1)^0,c
   644  000A3E  0E00               	movlw	0
   645  000A40  6E1F               	movwf	(LCD_print@delay+2)^0,c
   646  000A42  0E00               	movlw	0
   647  000A44  6E20               	movwf	(LCD_print@delay+3)^0,c
   648  000A46  ECBD  F005         	call	_LCD_print	;wreg free
   649  000A4A                     
   650                           ;main.c: 112:  LCD_placeCursorInPosition(0xC3);
   651  000A4A  0EC3               	movlw	195
   652  000A4C  EC1F  F007         	call	_LCD_placeCursorInPosition
   653  000A50                     
   654                           ;main.c: 113:  LCD_print("Fechada    ", 10);
   655  000A50  0E0F               	movlw	low STR_5
   656  000A52  6E1B               	movwf	LCD_print@text^0,c
   657  000A54  0E08               	movlw	high STR_5
   658  000A56  6E1C               	movwf	(LCD_print@text+1)^0,c
   659  000A58  0E0A               	movlw	10
   660  000A5A  6E1D               	movwf	LCD_print@delay^0,c
   661  000A5C  0E00               	movlw	0
   662  000A5E  6E1E               	movwf	(LCD_print@delay+1)^0,c
   663  000A60  0E00               	movlw	0
   664  000A62  6E1F               	movwf	(LCD_print@delay+2)^0,c
   665  000A64  0E00               	movlw	0
   666  000A66  6E20               	movwf	(LCD_print@delay+3)^0,c
   667  000A68  ECBD  F005         	call	_LCD_print	;wreg free
   668  000A6C                     
   669                           ;main.c: 114:  doorStatus = closed;
   670  000A6C  0E04               	movlw	4
   671  000A6E  6E30               	movwf	_doorStatus^0,c
   672  000A70  0012               	return		;funcret
   673  000A72                     __end_of_doorController_init:
   674                           	callstack 0
   675                           
   676 ;; *************** function _LCD_print *****************
   677 ;; Defined at:
   678 ;;		line 70 in file "./lcd.h"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  text            2   26[COMRAM] PTR unsigned char 
   681 ;;		 -> STR_15(11), STR_14(10), STR_13(11), STR_12(11), 
   682 ;;		 -> STR_11(12), STR_10(12), STR_9(8), STR_8(11), 
   683 ;;		 -> STR_7(11), STR_6(8), STR_5(12), STR_4(8), 
   684 ;;		 -> STR_3(9), STR_2(12), STR_1(14), 
   685 ;;  delay           4   28[COMRAM] long 
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  i               2   36[COMRAM] int 
   688 ;;  length          2   34[COMRAM] int 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   698 ;;      Params:         6       0       0       0       0       0       0       0       0
   699 ;;      Locals:         4       0       0       0       0       0       0       0       0
   700 ;;      Temps:          2       0       0       0       0       0       0       0       0
   701 ;;      Totals:        12       0       0       0       0       0       0       0       0
   702 ;;Total ram usage:       12 bytes
   703 ;; Hardware stack levels used: 1
   704 ;; Hardware stack levels required when called: 5
   705 ;; This function calls:
   706 ;;		_LCD_customDelay_ms
   707 ;;		_strlen
   708 ;; This function is called by:
   709 ;;		_doorController_init
   710 ;;		_doorController_invasion
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           	psect	text3
   715  000B7A                     __ptext3:
   716                           	callstack 0
   717  000B7A                     _LCD_print:
   718                           	callstack 24
   719  000B7A                     
   720                           ;./lcd.h: 70: void LCD_print(char text[], long delay);./lcd.h: 71: {;./lcd.h: 72:    int
      +                           i, length;;./lcd.h: 73:    length = (int) strlen(text);
   721  000B7A  C01B  F017         	movff	LCD_print@text,strlen@s
   722  000B7E  C01C  F018         	movff	LCD_print@text+1,strlen@s+1
   723  000B82  EC94  F006         	call	_strlen	;wreg free
   724  000B86  C017  F023         	movff	?_strlen,LCD_print@length
   725  000B8A  C018  F024         	movff	?_strlen+1,LCD_print@length+1
   726  000B8E                     
   727                           ;./lcd.h: 74:    for (i = 0; i < length; i++) {
   728  000B8E  0E00               	movlw	0
   729  000B90  6E26               	movwf	(LCD_print@i+1)^0,c
   730  000B92  0E00               	movlw	0
   731  000B94  6E25               	movwf	LCD_print@i^0,c
   732  000B96  EFEC  F005         	goto	l1114
   733  000B9A                     l56:
   734                           
   735                           ;./lcd.h: 75:       PORTEbits.RE1 = 1;
   736  000B9A  8284               	bsf	132,1,c	;volatile
   737  000B9C                     
   738                           ;./lcd.h: 76:       PORTD = text[i];
   739  000B9C  5025               	movf	LCD_print@i^0,w,c
   740  000B9E  241B               	addwf	LCD_print@text^0,w,c
   741  000BA0  6E21               	movwf	??_LCD_print^0,c
   742  000BA2  5026               	movf	(LCD_print@i+1)^0,w,c
   743  000BA4  201C               	addwfc	(LCD_print@text+1)^0,w,c
   744  000BA6  6E22               	movwf	(??_LCD_print+1)^0,c
   745  000BA8  C021  FFF6         	movff	??_LCD_print,tblptrl
   746  000BAC  C022  FFF7         	movff	??_LCD_print+1,tblptrh
   747  000BB0                     	if	0	;tblptru may be non-zero
   748  000BB0                     	endif
   749  000BB0                     	if	0	;tblptru may be non-zero
   750  000BB0                     	endif
   751  000BB0  0008               	tblrd		*
   752  000BB2  CFF5 FF83          	movff	tablat,3971	;volatile
   753  000BB6                     
   754                           ;./lcd.h: 77:       LCD_customDelay_ms(delay);
   755  000BB6  C01D  F017         	movff	LCD_print@delay,LCD_customDelay_ms@ms
   756  000BBA  C01E  F018         	movff	LCD_print@delay+1,LCD_customDelay_ms@ms+1
   757  000BBE  C01F  F019         	movff	LCD_print@delay+2,LCD_customDelay_ms@ms+2
   758  000BC2  C020  F01A         	movff	LCD_print@delay+3,LCD_customDelay_ms@ms+3
   759  000BC6  ECB1  F006         	call	_LCD_customDelay_ms	;wreg free
   760  000BCA                     
   761                           ;./lcd.h: 79:       PORTEbits.RE1 = 0;
   762  000BCA  9284               	bcf	132,1,c	;volatile
   763  000BCC                     
   764                           ;./lcd.h: 80:       _delay((unsigned long)((50)*(4000000/4000000.0)));
   765  000BCC  0E10               	movlw	16
   766  000BCE                     u307:
   767  000BCE  2EE8               	decfsz	wreg,f,c
   768  000BD0  D7FE               	bra	u307
   769  000BD2  D000               	nop2	
   770  000BD4                     
   771                           ;./lcd.h: 81:    }
   772  000BD4  4A25               	infsnz	LCD_print@i^0,f,c
   773  000BD6  2A26               	incf	(LCD_print@i+1)^0,f,c
   774  000BD8                     l1114:
   775  000BD8  5023               	movf	LCD_print@length^0,w,c
   776  000BDA  5C25               	subwf	LCD_print@i^0,w,c
   777  000BDC  5026               	movf	(LCD_print@i+1)^0,w,c
   778  000BDE  0A80               	xorlw	128
   779  000BE0  6E21               	movwf	??_LCD_print^0,c
   780  000BE2  5024               	movf	(LCD_print@length+1)^0,w,c
   781  000BE4  0A80               	xorlw	128
   782  000BE6  5821               	subwfb	??_LCD_print^0,w,c
   783  000BE8  A0D8               	btfss	status,0,c
   784  000BEA  EFF9  F005         	goto	u201
   785  000BEE  EFFB  F005         	goto	u200
   786  000BF2                     u201:
   787  000BF2  EFCD  F005         	goto	l56
   788  000BF6                     u200:
   789  000BF6  0012               	return		;funcret
   790  000BF8                     __end_of_LCD_print:
   791                           	callstack 0
   792                           
   793 ;; *************** function _strlen *****************
   794 ;; Defined at:
   795 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;  s               2   22[COMRAM] PTR const unsigned char 
   798 ;;		 -> STR_15(11), STR_14(10), STR_13(11), STR_12(11), 
   799 ;;		 -> STR_11(12), STR_10(12), STR_9(8), STR_8(11), 
   800 ;;		 -> STR_7(11), STR_6(8), STR_5(12), STR_4(8), 
   801 ;;		 -> STR_3(9), STR_2(12), STR_1(14), 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  a               2   24[COMRAM] PTR const unsigned char 
   804 ;;		 -> STR_15(11), STR_14(10), STR_13(11), STR_12(11), 
   805 ;;		 -> STR_11(12), STR_10(12), STR_9(8), STR_8(11), 
   806 ;;		 -> STR_7(11), STR_6(8), STR_5(12), STR_4(8), 
   807 ;;		 -> STR_3(9), STR_2(12), STR_1(14), 
   808 ;; Return value:  Size  Location     Type
   809 ;;                  2   22[COMRAM] unsigned int 
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   817 ;;      Params:         2       0       0       0       0       0       0       0       0
   818 ;;      Locals:         2       0       0       0       0       0       0       0       0
   819 ;;      Temps:          0       0       0       0       0       0       0       0       0
   820 ;;      Totals:         4       0       0       0       0       0       0       0       0
   821 ;;Total ram usage:        4 bytes
   822 ;; Hardware stack levels used: 1
   823 ;; Hardware stack levels required when called: 4
   824 ;; This function calls:
   825 ;;		Nothing
   826 ;; This function is called by:
   827 ;;		_LCD_print
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           	psect	text4
   832  000D28                     __ptext4:
   833                           	callstack 0
   834  000D28                     _strlen:
   835                           	callstack 24
   836  000D28  C017  F019         	movff	strlen@s,strlen@a
   837  000D2C  C018  F01A         	movff	strlen@s+1,strlen@a+1
   838  000D30  EF9C  F006         	goto	l1078
   839  000D34                     l1076:
   840  000D34  4A17               	infsnz	strlen@s^0,f,c
   841  000D36  2A18               	incf	(strlen@s+1)^0,f,c
   842  000D38                     l1078:
   843  000D38  C017  FFF6         	movff	strlen@s,tblptrl
   844  000D3C  C018  FFF7         	movff	strlen@s+1,tblptrh
   845  000D40                     	if	0	;tblptru may be non-zero
   846  000D40                     	endif
   847  000D40                     	if	0	;tblptru may be non-zero
   848  000D40                     	endif
   849  000D40  0008               	tblrd		*
   850  000D42  50F5               	movf	tablat,w,c
   851  000D44  0900               	iorlw	0
   852  000D46  A4D8               	btfss	status,2,c
   853  000D48  EFA8  F006         	goto	u171
   854  000D4C  EFAA  F006         	goto	u170
   855  000D50                     u171:
   856  000D50  EF9A  F006         	goto	l1076
   857  000D54                     u170:
   858  000D54  5019               	movf	strlen@a^0,w,c
   859  000D56  5C17               	subwf	strlen@s^0,w,c
   860  000D58  6E17               	movwf	?_strlen^0,c
   861  000D5A  501A               	movf	(strlen@a+1)^0,w,c
   862  000D5C  5818               	subwfb	(strlen@s+1)^0,w,c
   863  000D5E  6E18               	movwf	(?_strlen+1)^0,c
   864  000D60  0012               	return		;funcret
   865  000D62                     __end_of_strlen:
   866                           	callstack 0
   867                           
   868 ;; *************** function _LCD_customDelay_ms *****************
   869 ;; Defined at:
   870 ;;		line 64 in file "./lcd.h"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  ms              4   22[COMRAM] long 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, status,2, status,0
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   884 ;;      Params:         4       0       0       0       0       0       0       0       0
   885 ;;      Locals:         0       0       0       0       0       0       0       0       0
   886 ;;      Temps:          0       0       0       0       0       0       0       0       0
   887 ;;      Totals:         4       0       0       0       0       0       0       0       0
   888 ;;Total ram usage:        4 bytes
   889 ;; Hardware stack levels used: 1
   890 ;; Hardware stack levels required when called: 4
   891 ;; This function calls:
   892 ;;		Nothing
   893 ;; This function is called by:
   894 ;;		_LCD_print
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text5
   899  000D62                     __ptext5:
   900                           	callstack 0
   901  000D62                     _LCD_customDelay_ms:
   902                           	callstack 24
   903  000D62                     
   904                           ;./lcd.h: 65:    while (ms--) {
   905  000D62  EFB7  F006         	goto	l1072
   906  000D66                     l1070:
   907                           
   908                           ;./lcd.h: 66:       _delay((unsigned long)((1)*(4000000/4000.0)));
   909  000D66  0EC8               	movlw	200
   910  000D68                     u317:
   911  000D68  D000               	nop2	
   912  000D6A  2EE8               	decfsz	wreg,f,c
   913  000D6C  D7FD               	bra	u317
   914  000D6E                     l1072:
   915                           
   916                           ;./lcd.h: 65:    while (ms--) {
   917  000D6E  0EFF               	movlw	255
   918  000D70  2617               	addwf	LCD_customDelay_ms@ms^0,f,c
   919  000D72  0EFF               	movlw	255
   920  000D74  2218               	addwfc	(LCD_customDelay_ms@ms+1)^0,f,c
   921  000D76  0EFF               	movlw	255
   922  000D78  2219               	addwfc	(LCD_customDelay_ms@ms+2)^0,f,c
   923  000D7A  0EFF               	movlw	255
   924  000D7C  221A               	addwfc	(LCD_customDelay_ms@ms+3)^0,f,c
   925  000D7E  2817               	incf	LCD_customDelay_ms@ms^0,w,c
   926  000D80  E10A               	bnz	u161
   927  000D82  2818               	incf	(LCD_customDelay_ms@ms+1)^0,w,c
   928  000D84  E108               	bnz	u161
   929  000D86  2819               	incf	(LCD_customDelay_ms@ms+2)^0,w,c
   930  000D88  E106               	bnz	u161
   931  000D8A  281A               	incf	(LCD_customDelay_ms@ms+3)^0,w,c
   932  000D8C  A4D8               	btfss	status,2,c
   933  000D8E  EFCB  F006         	goto	u161
   934  000D92  EFCD  F006         	goto	u160
   935  000D96                     u161:
   936  000D96  EFB3  F006         	goto	l1070
   937  000D9A                     u160:
   938  000D9A  0012               	return		;funcret
   939  000D9C                     __end_of_LCD_customDelay_ms:
   940                           	callstack 0
   941                           
   942 ;; *************** function _LCD_placeCursorInPosition *****************
   943 ;; Defined at:
   944 ;;		line 53 in file "./lcd.h"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  position        1    wreg     unsigned char 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  position        1   22[COMRAM] unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   958 ;;      Params:         0       0       0       0       0       0       0       0       0
   959 ;;      Locals:         1       0       0       0       0       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0       0       0       0       0
   961 ;;      Totals:         1       0       0       0       0       0       0       0       0
   962 ;;Total ram usage:        1 bytes
   963 ;; Hardware stack levels used: 1
   964 ;; Hardware stack levels required when called: 4
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_doorController_init
   969 ;;		_doorController_invasion
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           	psect	text6
   974  000E3E                     __ptext6:
   975                           	callstack 0
   976  000E3E                     _LCD_placeCursorInPosition:
   977                           	callstack 25
   978                           
   979                           ;incstack = 0
   980                           ;LCD_placeCursorInPosition@position stored from wreg
   981  000E3E  6E17               	movwf	LCD_placeCursorInPosition@position^0,c
   982  000E40                     
   983                           ;./lcd.h: 53: void LCD_placeCursorInPosition(char position);./lcd.h: 54: {;./lcd.h: 55: 
      +                             PORTEbits.RE2 = 0;
   984  000E40  9484               	bcf	132,2,c	;volatile
   985                           
   986                           ;./lcd.h: 56:       PORTEbits.RE1 = 1;
   987  000E42  8284               	bsf	132,1,c	;volatile
   988  000E44                     
   989                           ;./lcd.h: 57:       PORTD = position;
   990  000E44  C017  FF83         	movff	LCD_placeCursorInPosition@position,3971	;volatile
   991  000E48                     
   992                           ;./lcd.h: 58:       _delay((unsigned long)((50)*(4000000/4000000.0)));
   993  000E48  0E10               	movlw	16
   994  000E4A                     u327:
   995  000E4A  2EE8               	decfsz	wreg,f,c
   996  000E4C  D7FE               	bra	u327
   997  000E4E  D000               	nop2	
   998  000E50                     
   999                           ;./lcd.h: 59:       PORTEbits.RE1 = 0;
  1000  000E50  9284               	bcf	132,1,c	;volatile
  1001  000E52                     
  1002                           ;./lcd.h: 60:       _delay((unsigned long)((50)*(4000000/4000000.0)));
  1003  000E52  0E10               	movlw	16
  1004  000E54                     u337:
  1005  000E54  2EE8               	decfsz	wreg,f,c
  1006  000E56  D7FE               	bra	u337
  1007  000E58  D000               	nop2	
  1008  000E5A                     
  1009                           ;./lcd.h: 61:    PORTEbits.RE2 = 1;
  1010  000E5A  8484               	bsf	132,2,c	;volatile
  1011  000E5C  0012               	return		;funcret
  1012  000E5E                     __end_of_LCD_placeCursorInPosition:
  1013                           	callstack 0
  1014                           
  1015 ;; *************** function _LCD_clearScreen *****************
  1016 ;; Defined at:
  1017 ;;		line 42 in file "./lcd.h"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;		None
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1031 ;;      Params:         0       0       0       0       0       0       0       0       0
  1032 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1034 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1035 ;;Total ram usage:        0 bytes
  1036 ;; Hardware stack levels used: 1
  1037 ;; Hardware stack levels required when called: 4
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_doorController_init
  1042 ;;		_doorController_invasion
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046                           	psect	text7
  1047  000E7E                     __ptext7:
  1048                           	callstack 0
  1049  000E7E                     _LCD_clearScreen:
  1050                           	callstack 25
  1051  000E7E                     
  1052                           ;./lcd.h: 44:    PORTEbits.RE2 = 0;
  1053  000E7E  9484               	bcf	132,2,c	;volatile
  1054                           
  1055                           ;./lcd.h: 45:       PORTEbits.RE1 = 1;
  1056  000E80  8284               	bsf	132,1,c	;volatile
  1057  000E82                     
  1058                           ;./lcd.h: 46:       PORTD = 0x01;
  1059  000E82  0E01               	movlw	1
  1060  000E84  6E83               	movwf	131,c	;volatile
  1061  000E86                     
  1062                           ;./lcd.h: 47:       _delay((unsigned long)((50)*(4000000/4000000.0)));
  1063  000E86  0E10               	movlw	16
  1064  000E88                     u347:
  1065  000E88  2EE8               	decfsz	wreg,f,c
  1066  000E8A  D7FE               	bra	u347
  1067  000E8C  D000               	nop2	
  1068  000E8E                     
  1069                           ;./lcd.h: 48:       PORTEbits.RE1 = 0;
  1070  000E8E  9284               	bcf	132,1,c	;volatile
  1071  000E90                     
  1072                           ;./lcd.h: 49:       _delay((unsigned long)((50)*(4000000/4000000.0)));
  1073  000E90  0E10               	movlw	16
  1074  000E92                     u357:
  1075  000E92  2EE8               	decfsz	wreg,f,c
  1076  000E94  D7FE               	bra	u357
  1077  000E96  D000               	nop2	
  1078  000E98                     
  1079                           ;./lcd.h: 50:    PORTEbits.RE2 = 1;
  1080  000E98  8484               	bsf	132,2,c	;volatile
  1081  000E9A  0012               	return		;funcret
  1082  000E9C                     __end_of_LCD_clearScreen:
  1083                           	callstack 0
  1084                           
  1085 ;; *************** function _LCD_init *****************
  1086 ;; Defined at:
  1087 ;;		line 12 in file "./lcd.h"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg, status,2
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1101 ;;      Params:         0       0       0       0       0       0       0       0       0
  1102 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1104 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1105 ;;Total ram usage:        0 bytes
  1106 ;; Hardware stack levels used: 1
  1107 ;; Hardware stack levels required when called: 4
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_main
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text8
  1116  000EEE                     __ptext8:
  1117                           	callstack 0
  1118  000EEE                     _LCD_init:
  1119                           	callstack 26
  1120  000EEE                     
  1121                           ;./lcd.h: 14:    TRISD = 0b00000000;
  1122  000EEE  0E00               	movlw	0
  1123  000EF0  6E95               	movwf	149,c	;volatile
  1124                           
  1125                           ;./lcd.h: 15:    TRISE = 0b00000000;
  1126  000EF2  0E00               	movlw	0
  1127  000EF4  6E96               	movwf	150,c	;volatile
  1128  000EF6  0012               	return		;funcret
  1129  000EF8                     __end_of_LCD_init:
  1130                           	callstack 0
  1131                           
  1132 ;; *************** function _LCD_config *****************
  1133 ;; Defined at:
  1134 ;;		line 18 in file "./lcd.h"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;		None
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  config          7   22[COMRAM] unsigned char [7]
  1139 ;;  i               2   29[COMRAM] int 
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      void 
  1142 ;; Registers used:
  1143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1149 ;;      Params:         0       0       0       0       0       0       0       0       0
  1150 ;;      Locals:         9       0       0       0       0       0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1152 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1153 ;;Total ram usage:        9 bytes
  1154 ;; Hardware stack levels used: 1
  1155 ;; Hardware stack levels required when called: 4
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text9
  1164  000C76                     __ptext9:
  1165                           	callstack 0
  1166  000C76                     _LCD_config:
  1167                           	callstack 26
  1168  000C76                     
  1169                           ;./lcd.h: 20:    PORTEbits.RE2 = 0;
  1170  000C76  9484               	bcf	132,2,c	;volatile
  1171  000C78                     
  1172                           ;./lcd.h: 21:    int i;;./lcd.h: 22:    char config[7] = {
  1173  000C78  EE20  F029         	lfsr	2,LCD_config@F3330
  1174  000C7C  EE10  F017         	lfsr	1,LCD_config@config
  1175  000C80  0E06               	movlw	6
  1176  000C82                     u71:
  1177  000C82  CFDB FFE3          	movff	plusw2,plusw1
  1178  000C86  06E8               	decf	wreg,f,c
  1179  000C88  E2FC               	bc	u71
  1180  000C8A                     
  1181                           ;./lcd.h: 32:    for (i = 0; i < 7; i++) {
  1182  000C8A  0E00               	movlw	0
  1183  000C8C  6E1F               	movwf	(LCD_config@i+1)^0,c
  1184  000C8E  0E00               	movlw	0
  1185  000C90  6E1E               	movwf	LCD_config@i^0,c
  1186  000C92                     l38:
  1187                           
  1188                           ;./lcd.h: 33:       PORTEbits.RE1 = 1;
  1189  000C92  8284               	bsf	132,1,c	;volatile
  1190  000C94                     
  1191                           ;./lcd.h: 34:       PORTD = config[i];
  1192  000C94  0E17               	movlw	low LCD_config@config
  1193  000C96  241E               	addwf	LCD_config@i^0,w,c
  1194  000C98  6ED9               	movwf	fsr2l,c
  1195  000C9A  0E00               	movlw	high LCD_config@config
  1196  000C9C  201F               	addwfc	(LCD_config@i+1)^0,w,c
  1197  000C9E  6EDA               	movwf	fsr2h,c
  1198  000CA0  50DF               	movf	indf2,w,c
  1199  000CA2  6E83               	movwf	131,c	;volatile
  1200  000CA4                     
  1201                           ;./lcd.h: 35:       _delay((unsigned long)((50)*(4000000/4000000.0)));
  1202  000CA4  0E10               	movlw	16
  1203  000CA6                     u367:
  1204  000CA6  2EE8               	decfsz	wreg,f,c
  1205  000CA8  D7FE               	bra	u367
  1206  000CAA  D000               	nop2	
  1207  000CAC                     
  1208                           ;./lcd.h: 36:       PORTEbits.RE1 = 0;
  1209  000CAC  9284               	bcf	132,1,c	;volatile
  1210  000CAE                     
  1211                           ;./lcd.h: 37:       _delay((unsigned long)((50)*(4000000/4000000.0)));
  1212  000CAE  0E10               	movlw	16
  1213  000CB0                     u377:
  1214  000CB0  2EE8               	decfsz	wreg,f,c
  1215  000CB2  D7FE               	bra	u377
  1216  000CB4  D000               	nop2	
  1217  000CB6                     
  1218                           ;./lcd.h: 38:    }
  1219  000CB6  4A1E               	infsnz	LCD_config@i^0,f,c
  1220  000CB8  2A1F               	incf	(LCD_config@i+1)^0,f,c
  1221  000CBA  BE1F               	btfsc	(LCD_config@i+1)^0,7,c
  1222  000CBC  EF69  F006         	goto	u81
  1223  000CC0  501F               	movf	(LCD_config@i+1)^0,w,c
  1224  000CC2  E109               	bnz	u80
  1225  000CC4  0E07               	movlw	7
  1226  000CC6  5C1E               	subwf	LCD_config@i^0,w,c
  1227  000CC8  A0D8               	btfss	status,0,c
  1228  000CCA  EF69  F006         	goto	u81
  1229  000CCE  EF6B  F006         	goto	u80
  1230  000CD2                     u81:
  1231  000CD2  EF49  F006         	goto	l38
  1232  000CD6                     u80:
  1233  000CD6                     
  1234                           ;./lcd.h: 39:    PORTEbits.RE2 = 1;
  1235  000CD6  8484               	bsf	132,2,c	;volatile
  1236  000CD8  0012               	return		;funcret
  1237  000CDA                     __end_of_LCD_config:
  1238                           	callstack 0
  1239                           
  1240 ;; *************** function _interrupt_service_routine *****************
  1241 ;; Defined at:
  1242 ;;		line 56 in file "main.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;		None
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;		None
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1256 ;;      Params:         0       0       0       0       0       0       0       0       0
  1257 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1258 ;;      Temps:          6       0       0       0       0       0       0       0       0
  1259 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1260 ;;Total ram usage:        6 bytes
  1261 ;; Hardware stack levels used: 1
  1262 ;; Hardware stack levels required when called: 3
  1263 ;; This function calls:
  1264 ;;		_doorController_closingDoor
  1265 ;;		_doorController_fire
  1266 ;;		_doorController_openingDoor
  1267 ;; This function is called by:
  1268 ;;		Interrupt level 2
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           	psect	intcode
  1273  000008                     __pintcode:
  1274                           	callstack 0
  1275  000008                     _interrupt_service_routine:
  1276                           	callstack 24
  1277                           
  1278                           ;incstack = 0
  1279  000008  8231               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1280  00000A  ED3E  F004         	call	int_func,f	;refresh shadow registers
  1281                           
  1282                           	psect	intcode_body
  1283  00087C                     __pintcode_body:
  1284                           	callstack 24
  1285  00087C                     int_func:
  1286                           	callstack 24
  1287  00087C  0006               	pop		; remove dummy address from shadow register refresh
  1288  00087E  CFF6 F013          	movff	tblptrl,??_interrupt_service_routine+2
  1289  000882  CFF7 F014          	movff	tblptrh,??_interrupt_service_routine+3
  1290  000886  CFF8 F015          	movff	tblptru,??_interrupt_service_routine+4
  1291  00088A  CFF5 F016          	movff	tablat,??_interrupt_service_routine+5
  1292  00088E                     
  1293                           ;main.c: 58:  if (INTCONbits.INT0IE && INTCONbits.INT0IF) {
  1294  00088E  A8F2               	btfss	242,4,c	;volatile
  1295  000890  EF4C  F004         	goto	i2u22_41
  1296  000894  EF4E  F004         	goto	i2u22_40
  1297  000898                     i2u22_41:
  1298  000898  EF75  F004         	goto	i2l76
  1299  00089C                     i2u22_40:
  1300  00089C  A2F2               	btfss	242,1,c	;volatile
  1301  00089E  EF53  F004         	goto	i2u23_41
  1302  0008A2  EF55  F004         	goto	i2u23_40
  1303  0008A6                     i2u23_41:
  1304  0008A6  EF75  F004         	goto	i2l76
  1305  0008AA                     i2u23_40:
  1306  0008AA  EF5F  F004         	goto	i2l1238
  1307  0008AE                     i2l1234:
  1308  0008AE  EC39  F005         	call	_doorController_openingDoor	;wreg free
  1309  0008B2  EF74  F004         	goto	i2l79
  1310  0008B6                     i2l1236:
  1311  0008B6  EC7B  F005         	call	_doorController_closingDoor	;wreg free
  1312  0008BA  EF74  F004         	goto	i2l79
  1313  0008BE                     i2l1238:
  1314  0008BE  5030               	movf	_doorStatus^0,w,c
  1315  0008C0  6E11               	movwf	??_interrupt_service_routine^0,c
  1316  0008C2  6A12               	clrf	(??_interrupt_service_routine+1)^0,c
  1317                           
  1318                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1319                           ; Switch size 1, requested type "simple"
  1320                           ; Number of cases is 1, Range of values is 0 to 0
  1321                           ; switch strategies available:
  1322                           ; Name         Instructions Cycles
  1323                           ; simple_byte            4     3 (average)
  1324                           ;	Chosen strategy is simple_byte
  1325  0008C4  5012               	movf	(??_interrupt_service_routine+1)^0,w,c
  1326  0008C6  0A00               	xorlw	0	; case 0
  1327  0008C8  B4D8               	btfsc	status,2,c
  1328  0008CA  EF69  F004         	goto	i2l1286
  1329  0008CE  EF74  F004         	goto	i2l79
  1330  0008D2                     i2l1286:
  1331                           
  1332                           ; Switch size 1, requested type "simple"
  1333                           ; Number of cases is 2, Range of values is 3 to 4
  1334                           ; switch strategies available:
  1335                           ; Name         Instructions Cycles
  1336                           ; simple_byte            7     4 (average)
  1337                           ;	Chosen strategy is simple_byte
  1338  0008D2  5011               	movf	??_interrupt_service_routine^0,w,c
  1339  0008D4  0A03               	xorlw	3	; case 3
  1340  0008D6  B4D8               	btfsc	status,2,c
  1341  0008D8  EF5B  F004         	goto	i2l1236
  1342  0008DC  0A07               	xorlw	7	; case 4
  1343  0008DE  B4D8               	btfsc	status,2,c
  1344  0008E0  EF57  F004         	goto	i2l1234
  1345  0008E4  EF74  F004         	goto	i2l79
  1346  0008E8                     i2l79:
  1347                           
  1348                           ;main.c: 66:   INTCONbits.INT0IF = 0;
  1349  0008E8  92F2               	bcf	242,1,c	;volatile
  1350  0008EA                     i2l76:
  1351                           
  1352                           ;main.c: 70:  if (INTCON3bits.INT1IE && INTCON3bits.INT1IF) {
  1353  0008EA  A6F0               	btfss	240,3,c	;volatile
  1354  0008EC  EF7A  F004         	goto	i2u24_41
  1355  0008F0  EF7C  F004         	goto	i2u24_40
  1356  0008F4                     i2u24_41:
  1357  0008F4  EFAD  F004         	goto	i2l82
  1358  0008F8                     i2u24_40:
  1359  0008F8  A0F0               	btfss	240,0,c	;volatile
  1360  0008FA  EF81  F004         	goto	i2u25_41
  1361  0008FE  EF83  F004         	goto	i2u25_40
  1362  000902                     i2u25_41:
  1363  000902  EFAD  F004         	goto	i2l82
  1364  000906                     i2u25_40:
  1365  000906  EF8F  F004         	goto	i2l1248
  1366  00090A                     i2l1244:
  1367  00090A  EC39  F005         	call	_doorController_openingDoor	;wreg free
  1368  00090E                     i2l86:
  1369  00090E  EC6D  F006         	call	_doorController_fire	;wreg free
  1370  000912  EFAC  F004         	goto	i2l87
  1371  000916                     i2l1246:
  1372  000916  EC7B  F005         	call	_doorController_closingDoor	;wreg free
  1373                           
  1374                           ;main.c: 77:   }
  1375  00091A  EFAC  F004         	goto	i2l87
  1376  00091E                     i2l1248:
  1377  00091E  5030               	movf	_doorStatus^0,w,c
  1378  000920  6E11               	movwf	??_interrupt_service_routine^0,c
  1379  000922  6A12               	clrf	(??_interrupt_service_routine+1)^0,c
  1380                           
  1381                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1382                           ; Switch size 1, requested type "simple"
  1383                           ; Number of cases is 1, Range of values is 0 to 0
  1384                           ; switch strategies available:
  1385                           ; Name         Instructions Cycles
  1386                           ; simple_byte            4     3 (average)
  1387                           ;	Chosen strategy is simple_byte
  1388  000924  5012               	movf	(??_interrupt_service_routine+1)^0,w,c
  1389  000926  0A00               	xorlw	0	; case 0
  1390  000928  B4D8               	btfsc	status,2,c
  1391  00092A  EF99  F004         	goto	i2l1288
  1392  00092E  EFAC  F004         	goto	i2l87
  1393  000932                     i2l1288:
  1394                           
  1395                           ; Switch size 1, requested type "simple"
  1396                           ; Number of cases is 4, Range of values is 1 to 4
  1397                           ; switch strategies available:
  1398                           ; Name         Instructions Cycles
  1399                           ; simple_byte           13     7 (average)
  1400                           ;	Chosen strategy is simple_byte
  1401  000932  5011               	movf	??_interrupt_service_routine^0,w,c
  1402  000934  0A01               	xorlw	1	; case 1
  1403  000936  B4D8               	btfsc	status,2,c
  1404  000938  EF8B  F004         	goto	i2l1246
  1405  00093C  0A03               	xorlw	3	; case 2
  1406  00093E  B4D8               	btfsc	status,2,c
  1407  000940  EF85  F004         	goto	i2l1244
  1408  000944  0A01               	xorlw	1	; case 3
  1409  000946  B4D8               	btfsc	status,2,c
  1410  000948  EF87  F004         	goto	i2l86
  1411  00094C  0A07               	xorlw	7	; case 4
  1412  00094E  B4D8               	btfsc	status,2,c
  1413  000950  EF85  F004         	goto	i2l1244
  1414  000954  EFAC  F004         	goto	i2l87
  1415  000958                     i2l87:
  1416                           
  1417                           ;main.c: 79:   INTCON3bits.INT1IF = 0;
  1418  000958  90F0               	bcf	240,0,c	;volatile
  1419  00095A                     i2l82:
  1420                           
  1421                           ;main.c: 83:  if (INTCON3bits.INT2IE && INTCON3bits.INT2IF) {
  1422  00095A  A8F0               	btfss	240,4,c	;volatile
  1423  00095C  EFB2  F004         	goto	i2u26_41
  1424  000960  EFB4  F004         	goto	i2u26_40
  1425  000964                     i2u26_41:
  1426  000964  EFC7  F004         	goto	i2l91
  1427  000968                     i2u26_40:
  1428  000968  A2F0               	btfss	240,1,c	;volatile
  1429  00096A  EFB9  F004         	goto	i2u27_41
  1430  00096E  EFBB  F004         	goto	i2u27_40
  1431  000972                     i2u27_41:
  1432  000972  EFC7  F004         	goto	i2l91
  1433  000976                     i2u27_40:
  1434  000976                     
  1435                           ;main.c: 85:   if (doorStatus == opened) {
  1436  000976  0E03               	movlw	3
  1437  000978  1830               	xorwf	_doorStatus^0,w,c
  1438  00097A  A4D8               	btfss	status,2,c
  1439  00097C  EFC2  F004         	goto	i2u28_41
  1440  000980  EFC4  F004         	goto	i2u28_40
  1441  000984                     i2u28_41:
  1442  000984  EFC6  F004         	goto	i2l1256
  1443  000988                     i2u28_40:
  1444  000988                     
  1445                           ;main.c: 86:    doorController_closingDoor();
  1446  000988  EC7B  F005         	call	_doorController_closingDoor	;wreg free
  1447  00098C                     i2l1256:
  1448                           
  1449                           ;main.c: 88:   INTCON3bits.INT2IF = 0;
  1450  00098C  92F0               	bcf	240,1,c	;volatile
  1451  00098E                     i2l91:
  1452  00098E  C016  FFF5         	movff	??_interrupt_service_routine+5,tablat
  1453  000992  C015  FFF8         	movff	??_interrupt_service_routine+4,tblptru
  1454  000996  C014  FFF7         	movff	??_interrupt_service_routine+3,tblptrh
  1455  00099A  C013  FFF6         	movff	??_interrupt_service_routine+2,tblptrl
  1456  00099E  9231               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1457  0009A0  0011               	retfie		f
  1458  0009A2                     __end_of_interrupt_service_routine:
  1459                           	callstack 0
  1460                           
  1461 ;; *************** function _doorController_openingDoor *****************
  1462 ;; Defined at:
  1463 ;;		line 118 in file "main.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;		None
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1477 ;;      Params:         0       0       0       0       0       0       0       0       0
  1478 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1479 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1480 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1481 ;;Total ram usage:        0 bytes
  1482 ;; Hardware stack levels used: 1
  1483 ;; Hardware stack levels required when called: 2
  1484 ;; This function calls:
  1485 ;;		i2_LCD_clearScreen
  1486 ;;		i2_LCD_customDelay_ms
  1487 ;;		i2_LCD_placeCursorInPosition
  1488 ;;		i2_LCD_print
  1489 ;; This function is called by:
  1490 ;;		_interrupt_service_routine
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text11
  1495  000A72                     __ptext11:
  1496                           	callstack 0
  1497  000A72                     _doorController_openingDoor:
  1498                           	callstack 24
  1499  000A72                     
  1500                           ;main.c: 120:  LCD_clearScreen();
  1501  000A72  EC4E  F007         	call	i2_LCD_clearScreen	;wreg free
  1502  000A76                     
  1503                           ;main.c: 121:  LCD_placeCursorInPosition(0x81);
  1504  000A76  0E81               	movlw	129
  1505  000A78  EC2F  F007         	call	i2_LCD_placeCursorInPosition
  1506  000A7C                     
  1507                           ;main.c: 122:  LCD_print("Status:", 50);
  1508  000A7C  0E72               	movlw	low STR_4
  1509  000A7E  6E05               	movwf	i2LCD_print@text^0,c
  1510  000A80  0E08               	movlw	high STR_4
  1511  000A82  6E06               	movwf	(i2LCD_print@text+1)^0,c
  1512  000A84  0E32               	movlw	50
  1513  000A86  6E07               	movwf	i2LCD_print@delay^0,c
  1514  000A88  0E00               	movlw	0
  1515  000A8A  6E08               	movwf	(i2LCD_print@delay+1)^0,c
  1516  000A8C  0E00               	movlw	0
  1517  000A8E  6E09               	movwf	(i2LCD_print@delay+2)^0,c
  1518  000A90  0E00               	movlw	0
  1519  000A92  6E0A               	movwf	(i2LCD_print@delay+3)^0,c
  1520  000A94  ECFC  F005         	call	i2_LCD_print	;wreg free
  1521  000A98                     
  1522                           ;main.c: 124:  LCD_placeCursorInPosition(0xC3);
  1523  000A98  0EC3               	movlw	195
  1524  000A9A  EC2F  F007         	call	i2_LCD_placeCursorInPosition
  1525  000A9E                     
  1526                           ;main.c: 125:  LCD_print("Abrindo...", 10);
  1527  000A9E  0E49               	movlw	low STR_7
  1528  000AA0  6E05               	movwf	i2LCD_print@text^0,c
  1529  000AA2  0E08               	movlw	high STR_7
  1530  000AA4  6E06               	movwf	(i2LCD_print@text+1)^0,c
  1531  000AA6  0E0A               	movlw	10
  1532  000AA8  6E07               	movwf	i2LCD_print@delay^0,c
  1533  000AAA  0E00               	movlw	0
  1534  000AAC  6E08               	movwf	(i2LCD_print@delay+1)^0,c
  1535  000AAE  0E00               	movlw	0
  1536  000AB0  6E09               	movwf	(i2LCD_print@delay+2)^0,c
  1537  000AB2  0E00               	movlw	0
  1538  000AB4  6E0A               	movwf	(i2LCD_print@delay+3)^0,c
  1539  000AB6  ECFC  F005         	call	i2_LCD_print	;wreg free
  1540  000ABA                     
  1541                           ;main.c: 126:  LCD_customDelay_ms(1500);
  1542  000ABA  0EDC               	movlw	220
  1543  000ABC  6E01               	movwf	i2LCD_customDelay_ms@ms^0,c
  1544  000ABE  0E05               	movlw	5
  1545  000AC0  6E02               	movwf	(i2LCD_customDelay_ms@ms+1)^0,c
  1546  000AC2  0E00               	movlw	0
  1547  000AC4  6E03               	movwf	(i2LCD_customDelay_ms@ms+2)^0,c
  1548  000AC6  0E00               	movlw	0
  1549  000AC8  6E04               	movwf	(i2LCD_customDelay_ms@ms+3)^0,c
  1550  000ACA  ECEB  F006         	call	i2_LCD_customDelay_ms	;wreg free
  1551  000ACE                     
  1552                           ;main.c: 128:  LCD_placeCursorInPosition(0xC3);
  1553  000ACE  0EC3               	movlw	195
  1554  000AD0  EC2F  F007         	call	i2_LCD_placeCursorInPosition
  1555  000AD4                     
  1556                           ;main.c: 129:  LCD_print("Aberta    ", 10);
  1557  000AD4  0E33               	movlw	low STR_8
  1558  000AD6  6E05               	movwf	i2LCD_print@text^0,c
  1559  000AD8  0E08               	movlw	high STR_8
  1560  000ADA  6E06               	movwf	(i2LCD_print@text+1)^0,c
  1561  000ADC  0E0A               	movlw	10
  1562  000ADE  6E07               	movwf	i2LCD_print@delay^0,c
  1563  000AE0  0E00               	movlw	0
  1564  000AE2  6E08               	movwf	(i2LCD_print@delay+1)^0,c
  1565  000AE4  0E00               	movlw	0
  1566  000AE6  6E09               	movwf	(i2LCD_print@delay+2)^0,c
  1567  000AE8  0E00               	movlw	0
  1568  000AEA  6E0A               	movwf	(i2LCD_print@delay+3)^0,c
  1569  000AEC  ECFC  F005         	call	i2_LCD_print	;wreg free
  1570  000AF0                     
  1571                           ;main.c: 131:  doorStatus = opened;
  1572  000AF0  0E03               	movlw	3
  1573  000AF2  6E30               	movwf	_doorStatus^0,c
  1574  000AF4  0012               	return		;funcret
  1575  000AF6                     __end_of_doorController_openingDoor:
  1576                           	callstack 0
  1577                           
  1578 ;; *************** function _doorController_fire *****************
  1579 ;; Defined at:
  1580 ;;		line 150 in file "main.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1594 ;;      Params:         0       0       0       0       0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1597 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1598 ;;Total ram usage:        0 bytes
  1599 ;; Hardware stack levels used: 1
  1600 ;; Hardware stack levels required when called: 2
  1601 ;; This function calls:
  1602 ;;		i2_LCD_clearScreen
  1603 ;;		i2_LCD_placeCursorInPosition
  1604 ;;		i2_LCD_print
  1605 ;; This function is called by:
  1606 ;;		_interrupt_service_routine
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610                           	psect	text12
  1611  000CDA                     __ptext12:
  1612                           	callstack 0
  1613  000CDA                     _doorController_fire:
  1614                           	callstack 24
  1615  000CDA                     
  1616                           ;main.c: 152:  LCD_clearScreen();
  1617  000CDA  EC4E  F007         	call	i2_LCD_clearScreen	;wreg free
  1618  000CDE                     
  1619                           ;main.c: 153:  LCD_placeCursorInPosition(0xC1);
  1620  000CDE  0EC1               	movlw	193
  1621  000CE0  EC2F  F007         	call	i2_LCD_placeCursorInPosition
  1622  000CE4                     
  1623                           ;main.c: 154:  LCD_print("INCENDIO!!", 10);
  1624  000CE4  0E3E               	movlw	low STR_12
  1625  000CE6  6E05               	movwf	i2LCD_print@text^0,c
  1626  000CE8  0E08               	movlw	high STR_12
  1627  000CEA  6E06               	movwf	(i2LCD_print@text+1)^0,c
  1628  000CEC  0E0A               	movlw	10
  1629  000CEE  6E07               	movwf	i2LCD_print@delay^0,c
  1630  000CF0  0E00               	movlw	0
  1631  000CF2  6E08               	movwf	(i2LCD_print@delay+1)^0,c
  1632  000CF4  0E00               	movlw	0
  1633  000CF6  6E09               	movwf	(i2LCD_print@delay+2)^0,c
  1634  000CF8  0E00               	movlw	0
  1635  000CFA  6E0A               	movwf	(i2LCD_print@delay+3)^0,c
  1636  000CFC  ECFC  F005         	call	i2_LCD_print	;wreg free
  1637  000D00                     
  1638                           ;main.c: 156:  LCD_placeCursorInPosition(0x91);
  1639  000D00  0E91               	movlw	145
  1640  000D02  EC2F  F007         	call	i2_LCD_placeCursorInPosition
  1641  000D06                     
  1642                           ;main.c: 157:  LCD_print("Emergencia", 10);
  1643  000D06  0E54               	movlw	low STR_13
  1644  000D08  6E05               	movwf	i2LCD_print@text^0,c
  1645  000D0A  0E08               	movlw	high STR_13
  1646  000D0C  6E06               	movwf	(i2LCD_print@text+1)^0,c
  1647  000D0E  0E0A               	movlw	10
  1648  000D10  6E07               	movwf	i2LCD_print@delay^0,c
  1649  000D12  0E00               	movlw	0
  1650  000D14  6E08               	movwf	(i2LCD_print@delay+1)^0,c
  1651  000D16  0E00               	movlw	0
  1652  000D18  6E09               	movwf	(i2LCD_print@delay+2)^0,c
  1653  000D1A  0E00               	movlw	0
  1654  000D1C  6E0A               	movwf	(i2LCD_print@delay+3)^0,c
  1655  000D1E  ECFC  F005         	call	i2_LCD_print	;wreg free
  1656  000D22                     
  1657                           ;main.c: 159:  doorStatus = fire;
  1658  000D22  0E01               	movlw	1
  1659  000D24  6E30               	movwf	_doorStatus^0,c
  1660  000D26  0012               	return		;funcret
  1661  000D28                     __end_of_doorController_fire:
  1662                           	callstack 0
  1663                           
  1664 ;; *************** function _doorController_closingDoor *****************
  1665 ;; Defined at:
  1666 ;;		line 134 in file "main.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;		None
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;		None
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1680 ;;      Params:         0       0       0       0       0       0       0       0       0
  1681 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1683 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1684 ;;Total ram usage:        0 bytes
  1685 ;; Hardware stack levels used: 1
  1686 ;; Hardware stack levels required when called: 2
  1687 ;; This function calls:
  1688 ;;		i2_LCD_clearScreen
  1689 ;;		i2_LCD_customDelay_ms
  1690 ;;		i2_LCD_placeCursorInPosition
  1691 ;;		i2_LCD_print
  1692 ;; This function is called by:
  1693 ;;		_interrupt_service_routine
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text13
  1698  000AF6                     __ptext13:
  1699                           	callstack 0
  1700  000AF6                     _doorController_closingDoor:
  1701                           	callstack 24
  1702  000AF6                     
  1703                           ;main.c: 136:  LCD_clearScreen();
  1704  000AF6  EC4E  F007         	call	i2_LCD_clearScreen	;wreg free
  1705  000AFA                     
  1706                           ;main.c: 137:  LCD_placeCursorInPosition(0x81);
  1707  000AFA  0E81               	movlw	129
  1708  000AFC  EC2F  F007         	call	i2_LCD_placeCursorInPosition
  1709  000B00                     
  1710                           ;main.c: 138:  LCD_print("Status:", 10);
  1711  000B00  0E72               	movlw	low STR_4
  1712  000B02  6E05               	movwf	i2LCD_print@text^0,c
  1713  000B04  0E08               	movlw	high STR_4
  1714  000B06  6E06               	movwf	(i2LCD_print@text+1)^0,c
  1715  000B08  0E0A               	movlw	10
  1716  000B0A  6E07               	movwf	i2LCD_print@delay^0,c
  1717  000B0C  0E00               	movlw	0
  1718  000B0E  6E08               	movwf	(i2LCD_print@delay+1)^0,c
  1719  000B10  0E00               	movlw	0
  1720  000B12  6E09               	movwf	(i2LCD_print@delay+2)^0,c
  1721  000B14  0E00               	movlw	0
  1722  000B16  6E0A               	movwf	(i2LCD_print@delay+3)^0,c
  1723  000B18  ECFC  F005         	call	i2_LCD_print	;wreg free
  1724  000B1C                     
  1725                           ;main.c: 140:  LCD_placeCursorInPosition(0xC3);
  1726  000B1C  0EC3               	movlw	195
  1727  000B1E  EC2F  F007         	call	i2_LCD_placeCursorInPosition
  1728  000B22                     
  1729                           ;main.c: 141:  LCD_print("Fechando...", 10);
  1730  000B22  0E1B               	movlw	low STR_10
  1731  000B24  6E05               	movwf	i2LCD_print@text^0,c
  1732  000B26  0E08               	movlw	high STR_10
  1733  000B28  6E06               	movwf	(i2LCD_print@text+1)^0,c
  1734  000B2A  0E0A               	movlw	10
  1735  000B2C  6E07               	movwf	i2LCD_print@delay^0,c
  1736  000B2E  0E00               	movlw	0
  1737  000B30  6E08               	movwf	(i2LCD_print@delay+1)^0,c
  1738  000B32  0E00               	movlw	0
  1739  000B34  6E09               	movwf	(i2LCD_print@delay+2)^0,c
  1740  000B36  0E00               	movlw	0
  1741  000B38  6E0A               	movwf	(i2LCD_print@delay+3)^0,c
  1742  000B3A  ECFC  F005         	call	i2_LCD_print	;wreg free
  1743  000B3E                     
  1744                           ;main.c: 142:  LCD_customDelay_ms(1500);
  1745  000B3E  0EDC               	movlw	220
  1746  000B40  6E01               	movwf	i2LCD_customDelay_ms@ms^0,c
  1747  000B42  0E05               	movlw	5
  1748  000B44  6E02               	movwf	(i2LCD_customDelay_ms@ms+1)^0,c
  1749  000B46  0E00               	movlw	0
  1750  000B48  6E03               	movwf	(i2LCD_customDelay_ms@ms+2)^0,c
  1751  000B4A  0E00               	movlw	0
  1752  000B4C  6E04               	movwf	(i2LCD_customDelay_ms@ms+3)^0,c
  1753  000B4E  ECEB  F006         	call	i2_LCD_customDelay_ms	;wreg free
  1754  000B52                     
  1755                           ;main.c: 144:  LCD_placeCursorInPosition(0xC3);
  1756  000B52  0EC3               	movlw	195
  1757  000B54  EC2F  F007         	call	i2_LCD_placeCursorInPosition
  1758  000B58                     
  1759                           ;main.c: 145:  LCD_print("Fechada    ", 10);
  1760  000B58  0E0F               	movlw	low STR_5
  1761  000B5A  6E05               	movwf	i2LCD_print@text^0,c
  1762  000B5C  0E08               	movlw	high STR_5
  1763  000B5E  6E06               	movwf	(i2LCD_print@text+1)^0,c
  1764  000B60  0E0A               	movlw	10
  1765  000B62  6E07               	movwf	i2LCD_print@delay^0,c
  1766  000B64  0E00               	movlw	0
  1767  000B66  6E08               	movwf	(i2LCD_print@delay+1)^0,c
  1768  000B68  0E00               	movlw	0
  1769  000B6A  6E09               	movwf	(i2LCD_print@delay+2)^0,c
  1770  000B6C  0E00               	movlw	0
  1771  000B6E  6E0A               	movwf	(i2LCD_print@delay+3)^0,c
  1772  000B70  ECFC  F005         	call	i2_LCD_print	;wreg free
  1773  000B74                     
  1774                           ;main.c: 147:  doorStatus = closed;
  1775  000B74  0E04               	movlw	4
  1776  000B76  6E30               	movwf	_doorStatus^0,c
  1777  000B78  0012               	return		;funcret
  1778  000B7A                     __end_of_doorController_closingDoor:
  1779                           	callstack 0
  1780                           
  1781 ;; *************** function i2_LCD_print *****************
  1782 ;; Defined at:
  1783 ;;		line 70 in file "./lcd.h"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  text            2    4[COMRAM] PTR unsigned char 
  1786 ;;		 -> STR_15(11), STR_14(10), STR_13(11), STR_12(11), 
  1787 ;;		 -> STR_11(12), STR_10(12), STR_9(8), STR_8(11), 
  1788 ;;		 -> STR_7(11), STR_6(8), STR_5(12), STR_4(8), 
  1789 ;;		 -> STR_3(9), STR_2(12), STR_1(14), 
  1790 ;;  delay           4    6[COMRAM] long 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;  i               2   14[COMRAM] int 
  1793 ;;  length          2   12[COMRAM] int 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1803 ;;      Params:         6       0       0       0       0       0       0       0       0
  1804 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1805 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1806 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1807 ;;Total ram usage:       12 bytes
  1808 ;; Hardware stack levels used: 1
  1809 ;; Hardware stack levels required when called: 1
  1810 ;; This function calls:
  1811 ;;		i2_LCD_customDelay_ms
  1812 ;;		i2_strlen
  1813 ;; This function is called by:
  1814 ;;		_doorController_openingDoor
  1815 ;;		_doorController_closingDoor
  1816 ;;		_doorController_fire
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text14
  1821  000BF8                     __ptext14:
  1822                           	callstack 0
  1823  000BF8                     i2_LCD_print:
  1824                           	callstack 24
  1825  000BF8                     
  1826                           ;./lcd.h: 70: void LCD_print(char text[], long delay);./lcd.h: 71: {;./lcd.h: 72:    int
      +                           i, length;;./lcd.h: 73:    length = (int) strlen(text);
  1827  000BF8  C005  F001         	movff	i2LCD_print@text,i2strlen@s
  1828  000BFC  C006  F002         	movff	i2LCD_print@text+1,i2strlen@s+1
  1829  000C00  ECCE  F006         	call	i2_strlen	;wreg free
  1830  000C04  C001  F00D         	movff	?i2_strlen,i2LCD_print@length
  1831  000C08  C002  F00E         	movff	?i2_strlen+1,i2LCD_print@length+1
  1832  000C0C                     
  1833                           ;./lcd.h: 74:    for (i = 0; i < length; i++) {
  1834  000C0C  0E00               	movlw	0
  1835  000C0E  6E10               	movwf	(i2LCD_print@i+1)^0,c
  1836  000C10  0E00               	movlw	0
  1837  000C12  6E0F               	movwf	i2LCD_print@i^0,c
  1838  000C14  EF2B  F006         	goto	i2l1142
  1839  000C18                     i2l56:
  1840                           
  1841                           ;./lcd.h: 75:       PORTEbits.RE1 = 1;
  1842  000C18  8284               	bsf	132,1,c	;volatile
  1843  000C1A                     
  1844                           ;./lcd.h: 76:       PORTD = text[i];
  1845  000C1A  500F               	movf	i2LCD_print@i^0,w,c
  1846  000C1C  2405               	addwf	i2LCD_print@text^0,w,c
  1847  000C1E  6E0B               	movwf	??i2_LCD_print^0,c
  1848  000C20  5010               	movf	(i2LCD_print@i+1)^0,w,c
  1849  000C22  2006               	addwfc	(i2LCD_print@text+1)^0,w,c
  1850  000C24  6E0C               	movwf	(??i2_LCD_print+1)^0,c
  1851  000C26  C00B  FFF6         	movff	??i2_LCD_print,tblptrl
  1852  000C2A  C00C  FFF7         	movff	??i2_LCD_print+1,tblptrh
  1853  000C2E                     	if	0	;tblptru may be non-zero
  1854  000C2E                     	endif
  1855  000C2E                     	if	0	;tblptru may be non-zero
  1856  000C2E                     	endif
  1857  000C2E  0008               	tblrd		*
  1858  000C30  CFF5 FF83          	movff	tablat,3971	;volatile
  1859  000C34                     
  1860                           ;./lcd.h: 77:       LCD_customDelay_ms(delay);
  1861  000C34  C007  F001         	movff	i2LCD_print@delay,i2LCD_customDelay_ms@ms
  1862  000C38  C008  F002         	movff	i2LCD_print@delay+1,i2LCD_customDelay_ms@ms+1
  1863  000C3C  C009  F003         	movff	i2LCD_print@delay+2,i2LCD_customDelay_ms@ms+2
  1864  000C40  C00A  F004         	movff	i2LCD_print@delay+3,i2LCD_customDelay_ms@ms+3
  1865  000C44  ECEB  F006         	call	i2_LCD_customDelay_ms	;wreg free
  1866  000C48                     
  1867                           ;./lcd.h: 79:       PORTEbits.RE1 = 0;
  1868  000C48  9284               	bcf	132,1,c	;volatile
  1869  000C4A                     
  1870                           ;./lcd.h: 80:       _delay((unsigned long)((50)*(4000000/4000000.0)));
  1871  000C4A  0E10               	movlw	16
  1872  000C4C                     i2u38_47:
  1873  000C4C  2EE8               	decfsz	wreg,f,c
  1874  000C4E  D7FE               	bra	i2u38_47
  1875  000C50  D000               	nop2	
  1876  000C52                     
  1877                           ;./lcd.h: 81:    }
  1878  000C52  4A0F               	infsnz	i2LCD_print@i^0,f,c
  1879  000C54  2A10               	incf	(i2LCD_print@i+1)^0,f,c
  1880  000C56                     i2l1142:
  1881  000C56  500D               	movf	i2LCD_print@length^0,w,c
  1882  000C58  5C0F               	subwf	i2LCD_print@i^0,w,c
  1883  000C5A  5010               	movf	(i2LCD_print@i+1)^0,w,c
  1884  000C5C  0A80               	xorlw	128
  1885  000C5E  6E0B               	movwf	??i2_LCD_print^0,c
  1886  000C60  500E               	movf	(i2LCD_print@length+1)^0,w,c
  1887  000C62  0A80               	xorlw	128
  1888  000C64  580B               	subwfb	??i2_LCD_print^0,w,c
  1889  000C66  A0D8               	btfss	status,0,c
  1890  000C68  EF38  F006         	goto	i2u21_41
  1891  000C6C  EF3A  F006         	goto	i2u21_40
  1892  000C70                     i2u21_41:
  1893  000C70  EF0C  F006         	goto	i2l56
  1894  000C74                     i2u21_40:
  1895  000C74  0012               	return		;funcret
  1896  000C76                     __end_ofi2_LCD_print:
  1897                           	callstack 0
  1898                           
  1899 ;; *************** function i2_strlen *****************
  1900 ;; Defined at:
  1901 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1904 ;;		 -> STR_15(11), STR_14(10), STR_13(11), STR_12(11), 
  1905 ;;		 -> STR_11(12), STR_10(12), STR_9(8), STR_8(11), 
  1906 ;;		 -> STR_7(11), STR_6(8), STR_5(12), STR_4(8), 
  1907 ;;		 -> STR_3(9), STR_2(12), STR_1(14), 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1910 ;;		 -> STR_15(11), STR_14(10), STR_13(11), STR_12(11), 
  1911 ;;		 -> STR_11(12), STR_10(12), STR_9(8), STR_8(11), 
  1912 ;;		 -> STR_7(11), STR_6(8), STR_5(12), STR_4(8), 
  1913 ;;		 -> STR_3(9), STR_2(12), STR_1(14), 
  1914 ;; Return value:  Size  Location     Type
  1915 ;;                  2    0[COMRAM] unsigned int 
  1916 ;; Registers used:
  1917 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1918 ;; Tracked objects:
  1919 ;;		On entry : 0/0
  1920 ;;		On exit  : 0/0
  1921 ;;		Unchanged: 0/0
  1922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1923 ;;      Params:         2       0       0       0       0       0       0       0       0
  1924 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1925 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1926 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1927 ;;Total ram usage:        4 bytes
  1928 ;; Hardware stack levels used: 1
  1929 ;; This function calls:
  1930 ;;		Nothing
  1931 ;; This function is called by:
  1932 ;;		i2_LCD_print
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           	psect	text15
  1937  000D9C                     __ptext15:
  1938                           	callstack 0
  1939  000D9C                     i2_strlen:
  1940                           	callstack 24
  1941  000D9C  C001  F003         	movff	i2strlen@s,i2strlen@a
  1942  000DA0  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  1943  000DA4  EFD6  F006         	goto	i2l1094
  1944  000DA8                     i2l1092:
  1945  000DA8  4A01               	infsnz	i2strlen@s^0,f,c
  1946  000DAA  2A02               	incf	(i2strlen@s+1)^0,f,c
  1947  000DAC                     i2l1094:
  1948  000DAC  C001  FFF6         	movff	i2strlen@s,tblptrl
  1949  000DB0  C002  FFF7         	movff	i2strlen@s+1,tblptrh
  1950  000DB4                     	if	0	;tblptru may be non-zero
  1951  000DB4                     	endif
  1952  000DB4                     	if	0	;tblptru may be non-zero
  1953  000DB4                     	endif
  1954  000DB4  0008               	tblrd		*
  1955  000DB6  50F5               	movf	tablat,w,c
  1956  000DB8  0900               	iorlw	0
  1957  000DBA  A4D8               	btfss	status,2,c
  1958  000DBC  EFE2  F006         	goto	i2u19_41
  1959  000DC0  EFE4  F006         	goto	i2u19_40
  1960  000DC4                     i2u19_41:
  1961  000DC4  EFD4  F006         	goto	i2l1092
  1962  000DC8                     i2u19_40:
  1963  000DC8  5003               	movf	i2strlen@a^0,w,c
  1964  000DCA  5C01               	subwf	i2strlen@s^0,w,c
  1965  000DCC  6E01               	movwf	?i2_strlen^0,c
  1966  000DCE  5004               	movf	(i2strlen@a+1)^0,w,c
  1967  000DD0  5802               	subwfb	(i2strlen@s+1)^0,w,c
  1968  000DD2  6E02               	movwf	(?i2_strlen+1)^0,c
  1969  000DD4  0012               	return		;funcret
  1970  000DD6                     __end_ofi2_strlen:
  1971                           	callstack 0
  1972                           
  1973 ;; *************** function i2_LCD_customDelay_ms *****************
  1974 ;; Defined at:
  1975 ;;		line 64 in file "./lcd.h"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  ms              4    0[COMRAM] long 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg, status,2, status,0
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1989 ;;      Params:         4       0       0       0       0       0       0       0       0
  1990 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1992 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1993 ;;Total ram usage:        4 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_doorController_openingDoor
  1999 ;;		_doorController_closingDoor
  2000 ;;		i2_LCD_print
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text16
  2005  000DD6                     __ptext16:
  2006                           	callstack 0
  2007  000DD6                     i2_LCD_customDelay_ms:
  2008                           	callstack 24
  2009  000DD6                     
  2010                           ;./lcd.h: 65:    while (ms--) {
  2011  000DD6  EFF1  F006         	goto	i2l1088
  2012  000DDA                     i2l1086:
  2013                           
  2014                           ;./lcd.h: 66:       _delay((unsigned long)((1)*(4000000/4000.0)));
  2015  000DDA  0EC8               	movlw	200
  2016  000DDC                     i2u39_47:
  2017  000DDC  D000               	nop2	
  2018  000DDE  2EE8               	decfsz	wreg,f,c
  2019  000DE0  D7FD               	bra	i2u39_47
  2020  000DE2                     i2l1088:
  2021                           
  2022                           ;./lcd.h: 65:    while (ms--) {
  2023  000DE2  0EFF               	movlw	255
  2024  000DE4  2601               	addwf	i2LCD_customDelay_ms@ms^0,f,c
  2025  000DE6  0EFF               	movlw	255
  2026  000DE8  2202               	addwfc	(i2LCD_customDelay_ms@ms+1)^0,f,c
  2027  000DEA  0EFF               	movlw	255
  2028  000DEC  2203               	addwfc	(i2LCD_customDelay_ms@ms+2)^0,f,c
  2029  000DEE  0EFF               	movlw	255
  2030  000DF0  2204               	addwfc	(i2LCD_customDelay_ms@ms+3)^0,f,c
  2031  000DF2  2801               	incf	i2LCD_customDelay_ms@ms^0,w,c
  2032  000DF4  E10A               	bnz	i2u18_41
  2033  000DF6  2802               	incf	(i2LCD_customDelay_ms@ms+1)^0,w,c
  2034  000DF8  E108               	bnz	i2u18_41
  2035  000DFA  2803               	incf	(i2LCD_customDelay_ms@ms+2)^0,w,c
  2036  000DFC  E106               	bnz	i2u18_41
  2037  000DFE  2804               	incf	(i2LCD_customDelay_ms@ms+3)^0,w,c
  2038  000E00  A4D8               	btfss	status,2,c
  2039  000E02  EF05  F007         	goto	i2u18_41
  2040  000E06  EF07  F007         	goto	i2u18_40
  2041  000E0A                     i2u18_41:
  2042  000E0A  EFED  F006         	goto	i2l1086
  2043  000E0E                     i2u18_40:
  2044  000E0E  0012               	return		;funcret
  2045  000E10                     __end_ofi2_LCD_customDelay_ms:
  2046                           	callstack 0
  2047                           
  2048 ;; *************** function i2_LCD_placeCursorInPosition *****************
  2049 ;; Defined at:
  2050 ;;		line 53 in file "./lcd.h"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  position        1    wreg     unsigned char 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  position        1    0[COMRAM] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2064 ;;      Params:         0       0       0       0       0       0       0       0       0
  2065 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2067 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2068 ;;Total ram usage:        1 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_doorController_openingDoor
  2074 ;;		_doorController_closingDoor
  2075 ;;		_doorController_fire
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text17
  2080  000E5E                     __ptext17:
  2081                           	callstack 0
  2082  000E5E                     i2_LCD_placeCursorInPosition:
  2083                           	callstack 25
  2084                           
  2085                           ;incstack = 0
  2086                           ;i2LCD_placeCursorInPosition@position stored from wreg
  2087  000E5E  6E01               	movwf	i2LCD_placeCursorInPosition@position^0,c
  2088  000E60                     
  2089                           ;./lcd.h: 53: void LCD_placeCursorInPosition(char position);./lcd.h: 54: {;./lcd.h: 55: 
      +                             PORTEbits.RE2 = 0;
  2090  000E60  9484               	bcf	132,2,c	;volatile
  2091                           
  2092                           ;./lcd.h: 56:       PORTEbits.RE1 = 1;
  2093  000E62  8284               	bsf	132,1,c	;volatile
  2094  000E64                     
  2095                           ;./lcd.h: 57:       PORTD = position;
  2096  000E64  C001  FF83         	movff	i2LCD_placeCursorInPosition@position,3971	;volatile
  2097  000E68                     
  2098                           ;./lcd.h: 58:       _delay((unsigned long)((50)*(4000000/4000000.0)));
  2099  000E68  0E10               	movlw	16
  2100  000E6A                     i2u40_47:
  2101  000E6A  2EE8               	decfsz	wreg,f,c
  2102  000E6C  D7FE               	bra	i2u40_47
  2103  000E6E  D000               	nop2	
  2104  000E70                     
  2105                           ;./lcd.h: 59:       PORTEbits.RE1 = 0;
  2106  000E70  9284               	bcf	132,1,c	;volatile
  2107  000E72                     
  2108                           ;./lcd.h: 60:       _delay((unsigned long)((50)*(4000000/4000000.0)));
  2109  000E72  0E10               	movlw	16
  2110  000E74                     i2u41_47:
  2111  000E74  2EE8               	decfsz	wreg,f,c
  2112  000E76  D7FE               	bra	i2u41_47
  2113  000E78  D000               	nop2	
  2114  000E7A                     
  2115                           ;./lcd.h: 61:    PORTEbits.RE2 = 1;
  2116  000E7A  8484               	bsf	132,2,c	;volatile
  2117  000E7C  0012               	return		;funcret
  2118  000E7E                     __end_ofi2_LCD_placeCursorInPosition:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function i2_LCD_clearScreen *****************
  2122 ;; Defined at:
  2123 ;;		line 42 in file "./lcd.h"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2137 ;;      Params:         0       0       0       0       0       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2140 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2141 ;;Total ram usage:        0 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_doorController_openingDoor
  2147 ;;		_doorController_closingDoor
  2148 ;;		_doorController_fire
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text18
  2153  000E9C                     __ptext18:
  2154                           	callstack 0
  2155  000E9C                     i2_LCD_clearScreen:
  2156                           	callstack 25
  2157  000E9C                     
  2158                           ;./lcd.h: 44:    PORTEbits.RE2 = 0;
  2159  000E9C  9484               	bcf	132,2,c	;volatile
  2160                           
  2161                           ;./lcd.h: 45:       PORTEbits.RE1 = 1;
  2162  000E9E  8284               	bsf	132,1,c	;volatile
  2163  000EA0                     
  2164                           ;./lcd.h: 46:       PORTD = 0x01;
  2165  000EA0  0E01               	movlw	1
  2166  000EA2  6E83               	movwf	131,c	;volatile
  2167  000EA4                     
  2168                           ;./lcd.h: 47:       _delay((unsigned long)((50)*(4000000/4000000.0)));
  2169  000EA4  0E10               	movlw	16
  2170  000EA6                     i2u42_47:
  2171  000EA6  2EE8               	decfsz	wreg,f,c
  2172  000EA8  D7FE               	bra	i2u42_47
  2173  000EAA  D000               	nop2	
  2174  000EAC                     
  2175                           ;./lcd.h: 48:       PORTEbits.RE1 = 0;
  2176  000EAC  9284               	bcf	132,1,c	;volatile
  2177  000EAE                     
  2178                           ;./lcd.h: 49:       _delay((unsigned long)((50)*(4000000/4000000.0)));
  2179  000EAE  0E10               	movlw	16
  2180  000EB0                     i2u43_47:
  2181  000EB0  2EE8               	decfsz	wreg,f,c
  2182  000EB2  D7FE               	bra	i2u43_47
  2183  000EB4  D000               	nop2	
  2184  000EB6                     
  2185                           ;./lcd.h: 50:    PORTEbits.RE2 = 1;
  2186  000EB6  8484               	bsf	132,2,c	;volatile
  2187  000EB8  0012               	return		;funcret
  2188  000EBA                     __end_ofi2_LCD_clearScreen:
  2189                           	callstack 0
  2190                           
  2191                           	psect	rparam
  2192  0000                     
  2193                           	psect	temp
  2194  000031                     btemp:
  2195                           	callstack 0
  2196  000031                     	ds	1
  2197  0000                     int$flags	set	btemp
  2198  0000                     wtemp8	set	btemp+1
  2199  0000                     ttemp5	set	btemp+1
  2200  0000                     ttemp6	set	btemp+4
  2201  0000                     ttemp7	set	btemp+8
  2202                           
  2203                           	psect	idloc
  2204                           
  2205                           ;Config register IDLOC0 @ 0x200000
  2206                           ;	unspecified, using default values
  2207  200000                     	org	2097152
  2208  200000  FF                 	db	255
  2209                           
  2210                           ;Config register IDLOC1 @ 0x200001
  2211                           ;	unspecified, using default values
  2212  200001                     	org	2097153
  2213  200001  FF                 	db	255
  2214                           
  2215                           ;Config register IDLOC2 @ 0x200002
  2216                           ;	unspecified, using default values
  2217  200002                     	org	2097154
  2218  200002  FF                 	db	255
  2219                           
  2220                           ;Config register IDLOC3 @ 0x200003
  2221                           ;	unspecified, using default values
  2222  200003                     	org	2097155
  2223  200003  FF                 	db	255
  2224                           
  2225                           ;Config register IDLOC4 @ 0x200004
  2226                           ;	unspecified, using default values
  2227  200004                     	org	2097156
  2228  200004  FF                 	db	255
  2229                           
  2230                           ;Config register IDLOC5 @ 0x200005
  2231                           ;	unspecified, using default values
  2232  200005                     	org	2097157
  2233  200005  FF                 	db	255
  2234                           
  2235                           ;Config register IDLOC6 @ 0x200006
  2236                           ;	unspecified, using default values
  2237  200006                     	org	2097158
  2238  200006  FF                 	db	255
  2239                           
  2240                           ;Config register IDLOC7 @ 0x200007
  2241                           ;	unspecified, using default values
  2242  200007                     	org	2097159
  2243  200007  FF                 	db	255
  2244                           
  2245                           	psect	config
  2246                           
  2247                           ;Config register CONFIG1L @ 0x300000
  2248                           ;	PLL Prescaler Selection bits
  2249                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2250                           ;	System Clock Postscaler Selection bits
  2251                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2252                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2253                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2254  300000                     	org	3145728
  2255  300000  00                 	db	0
  2256                           
  2257                           ;Config register CONFIG1H @ 0x300001
  2258                           ;	Oscillator Selection bits
  2259                           ;	FOSC = HS, HS oscillator (HS)
  2260                           ;	Fail-Safe Clock Monitor Enable bit
  2261                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2262                           ;	Internal/External Oscillator Switchover bit
  2263                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2264  300001                     	org	3145729
  2265  300001  0C                 	db	12
  2266                           
  2267                           ;Config register CONFIG2L @ 0x300002
  2268                           ;	Power-up Timer Enable bit
  2269                           ;	PWRT = OFF, PWRT disabled
  2270                           ;	Brown-out Reset Enable bits
  2271                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2272                           ;	Brown-out Reset Voltage bits
  2273                           ;	BORV = 3, Minimum setting 2.05V
  2274                           ;	USB Voltage Regulator Enable bit
  2275                           ;	VREGEN = OFF, USB voltage regulator disabled
  2276  300002                     	org	3145730
  2277  300002  19                 	db	25
  2278                           
  2279                           ;Config register CONFIG2H @ 0x300003
  2280                           ;	Watchdog Timer Enable bit
  2281                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2282                           ;	Watchdog Timer Postscale Select bits
  2283                           ;	WDTPS = 32768, 1:32768
  2284  300003                     	org	3145731
  2285  300003  1E                 	db	30
  2286                           
  2287                           ; Padding undefined space
  2288  300004                     	org	3145732
  2289  300004  FF                 	db	255
  2290                           
  2291                           ;Config register CONFIG3H @ 0x300005
  2292                           ;	CCP2 MUX bit
  2293                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2294                           ;	PORTB A/D Enable bit
  2295                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2296                           ;	Low-Power Timer 1 Oscillator Enable bit
  2297                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2298                           ;	MCLR Pin Enable bit
  2299                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2300  300005                     	org	3145733
  2301  300005  81                 	db	129
  2302                           
  2303                           ;Config register CONFIG4L @ 0x300006
  2304                           ;	Stack Full/Underflow Reset Enable bit
  2305                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  2306                           ;	Single-Supply ICSP Enable bit
  2307                           ;	LVP = OFF, Single-Supply ICSP disabled
  2308                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2309                           ;	ICPRT = OFF, ICPORT disabled
  2310                           ;	Extended Instruction Set Enable bit
  2311                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2312                           ;	Background Debugger Enable bit
  2313                           ;	DEBUG = 0x1, unprogrammed default
  2314  300006                     	org	3145734
  2315  300006  80                 	db	128
  2316                           
  2317                           ; Padding undefined space
  2318  300007                     	org	3145735
  2319  300007  FF                 	db	255
  2320                           
  2321                           ;Config register CONFIG5L @ 0x300008
  2322                           ;	Code Protection bit
  2323                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2324                           ;	Code Protection bit
  2325                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2326                           ;	Code Protection bit
  2327                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2328                           ;	Code Protection bit
  2329                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2330  300008                     	org	3145736
  2331  300008  0F                 	db	15
  2332                           
  2333                           ;Config register CONFIG5H @ 0x300009
  2334                           ;	Boot Block Code Protection bit
  2335                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2336                           ;	Data EEPROM Code Protection bit
  2337                           ;	CPD = OFF, Data EEPROM is not code-protected
  2338  300009                     	org	3145737
  2339  300009  C0                 	db	192
  2340                           
  2341                           ;Config register CONFIG6L @ 0x30000A
  2342                           ;	Write Protection bit
  2343                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2344                           ;	Write Protection bit
  2345                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2346                           ;	Write Protection bit
  2347                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2348                           ;	Write Protection bit
  2349                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2350  30000A                     	org	3145738
  2351  30000A  0F                 	db	15
  2352                           
  2353                           ;Config register CONFIG6H @ 0x30000B
  2354                           ;	Configuration Register Write Protection bit
  2355                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2356                           ;	Boot Block Write Protection bit
  2357                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2358                           ;	Data EEPROM Write Protection bit
  2359                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2360  30000B                     	org	3145739
  2361  30000B  E0                 	db	224
  2362                           
  2363                           ;Config register CONFIG7L @ 0x30000C
  2364                           ;	Table Read Protection bit
  2365                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2366                           ;	Table Read Protection bit
  2367                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2368                           ;	Table Read Protection bit
  2369                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2370                           ;	Table Read Protection bit
  2371                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2372  30000C                     	org	3145740
  2373  30000C  0F                 	db	15
  2374                           
  2375                           ;Config register CONFIG7H @ 0x30000D
  2376                           ;	Boot Block Table Read Protection bit
  2377                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2378  30000D                     	org	3145741
  2379  30000D  40                 	db	64
  2380                           tosu	equ	0xFFF
  2381                           tosh	equ	0xFFE
  2382                           tosl	equ	0xFFD
  2383                           stkptr	equ	0xFFC
  2384                           pclatu	equ	0xFFB
  2385                           pclath	equ	0xFFA
  2386                           pcl	equ	0xFF9
  2387                           tblptru	equ	0xFF8
  2388                           tblptrh	equ	0xFF7
  2389                           tblptrl	equ	0xFF6
  2390                           tablat	equ	0xFF5
  2391                           prodh	equ	0xFF4
  2392                           prodl	equ	0xFF3
  2393                           indf0	equ	0xFEF
  2394                           postinc0	equ	0xFEE
  2395                           postdec0	equ	0xFED
  2396                           preinc0	equ	0xFEC
  2397                           plusw0	equ	0xFEB
  2398                           fsr0h	equ	0xFEA
  2399                           fsr0l	equ	0xFE9
  2400                           wreg	equ	0xFE8
  2401                           indf1	equ	0xFE7
  2402                           postinc1	equ	0xFE6
  2403                           postdec1	equ	0xFE5
  2404                           preinc1	equ	0xFE4
  2405                           plusw1	equ	0xFE3
  2406                           fsr1h	equ	0xFE2
  2407                           fsr1l	equ	0xFE1
  2408                           bsr	equ	0xFE0
  2409                           indf2	equ	0xFDF
  2410                           postinc2	equ	0xFDE
  2411                           postdec2	equ	0xFDD
  2412                           preinc2	equ	0xFDC
  2413                           plusw2	equ	0xFDB
  2414                           fsr2h	equ	0xFDA
  2415                           fsr2l	equ	0xFD9
  2416                           status	equ	0xFD8

Data Sizes:
    Strings     121
    Constant    0
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      48
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_15(CODE[11]), STR_14(CODE[10]), STR_13(CODE[11]), STR_12(CODE[11]), 
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_9(CODE[8]), STR_8(CODE[11]), 
		 -> STR_7(CODE[11]), STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[8]), 
		 -> STR_3(CODE[9]), STR_2(CODE[12]), STR_1(CODE[14]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_15(CODE[11]), STR_14(CODE[10]), STR_13(CODE[11]), STR_12(CODE[11]), 
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_9(CODE[8]), STR_8(CODE[11]), 
		 -> STR_7(CODE[11]), STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[8]), 
		 -> STR_3(CODE[9]), STR_2(CODE[12]), STR_1(CODE[14]), 

    LCD_print@text	PTR unsigned char  size(2) Largest target is 14
		 -> STR_15(CODE[11]), STR_14(CODE[10]), STR_13(CODE[11]), STR_12(CODE[11]), 
		 -> STR_11(CODE[12]), STR_10(CODE[12]), STR_9(CODE[8]), STR_8(CODE[11]), 
		 -> STR_7(CODE[11]), STR_6(CODE[8]), STR_5(CODE[12]), STR_4(CODE[8]), 
		 -> STR_3(CODE[9]), STR_2(CODE[12]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_doorController_init
    _doorController_init->_LCD_print
    _LCD_print->_LCD_customDelay_ms
    _LCD_print->_strlen

Critical Paths under _interrupt_service_routine in COMRAM

    _doorController_openingDoor->i2_LCD_print
    _doorController_fire->i2_LCD_print
    _doorController_closingDoor->i2_LCD_print
    i2_LCD_print->i2_LCD_customDelay_ms
    i2_LCD_print->i2_strlen

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_service_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_service_routine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_service_routine in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_service_routine in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_service_routine in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_service_routine in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_service_routine in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_service_routine in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2438
                         _LCD_config
                           _LCD_init
                _doorController_init
                   _interrupt_config
 ---------------------------------------------------------------------------------
 (1) _interrupt_config                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doorController_init                                  2     2      0    2378
                                             38 COMRAM     2     2      0
                    _LCD_clearScreen
          _LCD_placeCursorInPosition
                          _LCD_print
 ---------------------------------------------------------------------------------
 (2) _LCD_print                                           12     6      6    2363
                                             26 COMRAM    12     6      6
                 _LCD_customDelay_ms
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     166
                                             22 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _LCD_customDelay_ms                                   4     0      4     198
                                             22 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _LCD_placeCursorInPosition                            1     1      0      15
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_clearScreen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_config                                           9     9      0      60
                                             22 COMRAM     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _interrupt_service_routine                            6     6      0    2567
                                             16 COMRAM     6     6      0
         _doorController_closingDoor
                _doorController_fire
         _doorController_openingDoor
 ---------------------------------------------------------------------------------
 (5) _doorController_openingDoor                           0     0      0     889
                  i2_LCD_clearScreen
               i2_LCD_customDelay_ms
        i2_LCD_placeCursorInPosition
                        i2_LCD_print
 ---------------------------------------------------------------------------------
 (5) _doorController_fire                                  0     0      0     789
                  i2_LCD_clearScreen
        i2_LCD_placeCursorInPosition
                        i2_LCD_print
 ---------------------------------------------------------------------------------
 (5) _doorController_closingDoor                           0     0      0     889
                  i2_LCD_clearScreen
               i2_LCD_customDelay_ms
        i2_LCD_placeCursorInPosition
                        i2_LCD_print
 ---------------------------------------------------------------------------------
 (6) i2_LCD_print                                         12     6      6     767
                                              4 COMRAM    12     6      6
               i2_LCD_customDelay_ms
                           i2_strlen
 ---------------------------------------------------------------------------------
 (7) i2_strlen                                             4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) i2_LCD_customDelay_ms                                 4     0      4     100
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) i2_LCD_placeCursorInPosition                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) i2_LCD_clearScreen                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_config
   _LCD_init
   _doorController_init
     _LCD_clearScreen
     _LCD_placeCursorInPosition
     _LCD_print
       _LCD_customDelay_ms
       _strlen
   _interrupt_config

 _interrupt_service_routine (ROOT)
   _doorController_closingDoor
     i2_LCD_clearScreen
     i2_LCD_customDelay_ms
     i2_LCD_placeCursorInPosition
     i2_LCD_print
       i2_LCD_customDelay_ms
       i2_strlen
   _doorController_fire
     i2_LCD_clearScreen
     i2_LCD_placeCursorInPosition
     i2_LCD_print
   _doorController_openingDoor
     i2_LCD_clearScreen
     i2_LCD_customDelay_ms
     i2_LCD_placeCursorInPosition
     i2_LCD_print

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      30       1       51.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30      20        0.0%
DATA                 0      0      30       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed May 19 11:59:08 2021

                                  l40 0CD8                                    l33 0EF6  
                                  l43 0E9A                                    l52 0D9A  
                                  l38 0C92                                    l46 0E5C  
                                  l39 0CD6                                    l71 0ED4  
                                  l56 0B9A                                    l65 0EE6  
                                  l58 0BF6                                    l66 0EE6  
                                  l94 0A70                                    u71 0C82  
                                  u80 0CD6                                    u81 0CD2  
                         ?_LCD_config 0001                                   l900 0EEE  
                                 l820 0E7E                                   l902 0C76  
                                 l830 0E98                                   l822 0E82  
                                 l920 0CB6                                   l912 0C94  
                                 l904 0C78                                   l824 0E86  
                                 l840 0E52                                   l832 0E40  
                                 l922 0CBA                                   l914 0CA4  
                                 l906 0C8A                                   l826 0E8E  
                                 l842 0E5A                                   l834 0E44  
                                 l916 0CAC                                   l828 0E90  
                                 l836 0E48                                   l924 0EBA  
                                 l918 0CAE                                   l838 0E50  
                                 l786 0D60                                   u200 0BF6  
                                 u201 0BF2                                   u160 0D9A  
                                 u161 0D96                                   u170 0D54  
                                 u171 0D50                                   u307 0BCE  
                                 u317 0D68                                   u327 0E4A  
                                 u337 0E54                                   u347 0E88  
                                 u357 0E92                                   u367 0CA6  
                                 u377 0CB0                                   u297 0A16  
                                 wreg 000FE8                       i2LCD_print@text 0005  
              ??i2_LCD_customDelay_ms 0005                                  l1100 0B7A  
                                l1110 0BCC                                  l1102 0B8E  
                                l1112 0BD4                                  l1104 0B9C  
                                l1106 0BB6                                  l1114 0BD8  
                                l1108 0BCA                                  l1220 0ED6  
                                l1070 0D66                                  l1150 09C8  
                                l1222 0EDA                                  l1072 0D6E  
                                l1080 0D54                                  l1160 0A24  
                                l1152 09CE                                  l1144 09A2  
                                l1224 0EDE                                  l1074 0D28  
                                l1170 0A6C                                  l1162 0A28  
                                l1154 09EA                                  l1146 09A6  
                                l1226 0EE2                                  l1068 0D62  
                                l1076 0D34                                  l1164 0A2E  
                                l1156 09F0                                  l1148 09AC  
                                l1078 0D38                                  l1166 0A4A  
                                l1158 0A0C                                  l1168 0A50  
                                STR_1 0801                                  STR_2 0827  
                                STR_3 0869                                  STR_4 0872  
                                STR_5 080F                                  STR_6 0872  
                                STR_7 0849                                  STR_8 0833  
                                STR_9 0872                                  i2l43 0EB8  
                                i2l52 0E0E                                  i2l46 0E7C  
                                i2l56 0C18                                  i2l58 0C74  
                                i2l82 095A                                  i2l91 098E  
                                i2l76 08EA                                  i2l86 090E  
                                i2l87 0958                                  i2l79 08E8  
                                i2l97 0AF4                                  _main 0ED6  
                   i2_LCD_clearScreen 0E9C                                  indf2 000FDF  
                                fsr1l 000FE1                                  fsr2l 000FD9  
                                btemp 0031                                  start 000E  
                  ?i2_LCD_clearScreen 0001                      i2LCD_print@delay 0007  
                  __size_of_LCD_print 007E                          ___param_bank 000000  
                 ??i2_LCD_clearScreen 0001              __end_of_interrupt_config 0ED6  
                    __end_of_LCD_init 0EF8                                 ?_main 0001  
                               STR_10 081B                                 STR_11 080F  
                               STR_12 083E                                 STR_13 0854  
                               STR_14 085F                                 i2l100 0B78  
                               i2l103 0D26                                 i2l860 0E9C  
                               i2l870 0EB6                                 i2l862 0EA0  
                               i2l864 0EA4                                 i2l866 0EAC  
                               i2l786 0DD4                                 i2l868 0EAE  
                               _PORTD 000F83                                 _TRISD 000F95  
                               _TRISE 000F96             __end_ofi2_LCD_clearScreen 0EBA  
                               tablat 000FF5                          ?i2_LCD_print 0005  
                               plusw1 000FE3                                 plusw2 000FDB  
                               ttemp5 0032                                 ttemp6 0035  
                               ttemp7 0039                                 status 000FD8  
                               wtemp8 0032   __end_ofi2_LCD_placeCursorInPosition 0E7E  
         i2_LCD_placeCursorInPosition 0E5E                           LCD_config@i 001E  
                 __size_of_LCD_config 0064                      __end_ofi2_strlen 0DD6  
                   i2LCD_print@length 000D                       __initialization 0E10  
                   ??_LCD_clearScreen 0017                          __end_of_main 0EEE  
                              ??_main 0029                         __activetblptr 000002  
          __end_of_LCD_customDelay_ms 0D9C                  LCD_customDelay_ms@ms 0017  
                   __end_of_LCD_print 0BF8          ??_doorController_closingDoor 0011  
                              i2l1120 0E68                                i2l1200 0B3E  
                              i2l1122 0E70                                i2l1130 0C0C  
                              i2l1202 0B52                                i2l1210 0CDE  
                              i2l1124 0E72                                i2l1116 0E60  
                              i2l1140 0C52                                i2l1132 0C1A  
                              i2l1204 0B58                                i2l1212 0CE4  
                              i2l1126 0E7A                                i2l1118 0E64  
                              i2l1134 0C34                                i2l1142 0C56  
                              i2l1206 0B74                                i2l1214 0D00  
                              i2l1230 089C                                i2l1136 0C48  
                              i2l1128 0BF8                                i2l1216 0D06  
                              i2l1208 0CDA                                i2l1240 08F8  
                              i2l1090 0D9C                                i2l1138 0C4A  
                              i2l1218 0D22                                i2l1250 0968  
                              i2l1234 08AE                                i2l1084 0DD6  
                              i2l1092 0DA8                                i2l1180 0A9E  
                              i2l1172 0A72                                i2l1252 0976  
                              i2l1244 090A                                i2l1236 08B6  
                              i2l1228 088E                                i2l1086 0DDA  
                              i2l1094 0DAC                                i2l1190 0AF6  
                              i2l1182 0ABA                                i2l1174 0A76  
                              i2l1254 0988                                i2l1246 0916  
                              i2l1238 08BE                                i2l1088 0DE2  
                              i2l1096 0DC8                                i2l1192 0AFA  
                              i2l1184 0ACE                                i2l1176 0A7C  
                              i2l1256 098C                                i2l1248 091E  
                              i2l1194 0B00                                i2l1186 0AD4  
                              i2l1178 0A98                                i2l1196 0B1C  
                              i2l1188 0AF0                                i2l1198 0B22  
                              i2l1286 08D2                                i2l1288 0932  
                              isa$std 000001                                _strlen 0D28  
 __size_of_doorController_closingDoor 0084                        LCD_print@delay 001D  
                        __pdataCOMRAM 0029                          __mediumconst 0000  
                              tblptrh 000FF7                                tblptrl 000FF6  
                              tblptru 000FF8            __size_ofi2_LCD_clearScreen 001E  
                          __accesstop 0060               __end_of__initialization 0E30  
                           ?_LCD_init 0001                         ___rparam_used 000001  
         ??_interrupt_service_routine 0011                        __pcstackCOMRAM 0001  
                        ??_LCD_config 0017    __size_of_LCD_placeCursorInPosition 0020  
          ?_LCD_placeCursorInPosition 0001                             ?i2_strlen 0001  
        __size_of_doorController_fire 004E          __size_of_doorController_init 00D0  
                          ??_LCD_init 0017                  __size_ofi2_LCD_print 007E  
                  __end_of_LCD_config 0CDA                     ?_interrupt_config 0001  
                             ?_strlen 0017                    ??_interrupt_config 0017  
           _interrupt_service_routine 0008          ??_doorController_openingDoor 0011  
   __end_of_LCD_placeCursorInPosition 0E5E                               i2u21_40 0C74  
                             i2u21_41 0C70                               i2u22_40 089C  
                             i2u22_41 0898                               i2u23_40 08AA  
                             i2u23_41 08A6                               i2u24_40 08F8  
                             i2u24_41 08F4                               i2u40_47 0E6A  
                             i2u25_40 0906                               i2u25_41 0902  
                             i2u41_47 0E74                               i2u18_40 0E0E  
                             i2u26_40 0968                               i2u18_41 0E0A  
                             i2u26_41 0964                               i2u42_47 0EA6  
                             i2u19_40 0DC8                               i2u27_40 0976  
                             i2u19_41 0DC4                               i2u27_41 0972  
                             i2u43_47 0EB0                               i2u28_40 0988  
                             i2u28_41 0984                               i2u38_47 0C4C  
                             i2u39_47 0DDC                            ??i2_strlen 0003  
  __end_of_doorController_closingDoor 0B7A            _doorController_closingDoor 0AF6  
                        i2LCD_print@i 000F                       _LCD_clearScreen 0E7E  
       __size_ofi2_LCD_customDelay_ms 003A                            _doorStatus 0030  
                             __Hparam 0000                               __Lparam 0000  
 __size_of_doorController_openingDoor 0084                          __psmallconst 0800  
                             __pcinit 0E10                               __ramtop 0800  
                             __ptext0 0ED6                               __ptext1 0EBA  
                             __ptext2 09A2                               __ptext3 0B7A  
                             __ptext4 0D28                               __ptext5 0D62  
                             __ptext6 0E3E                               __ptext7 0E7E  
                             __ptext8 0EEE                               __ptext9 0C76  
                     __size_of_strlen 003A                        __pintcode_body 087C  
                end_of_initialization 0E30                             _LCD_print 0B7A  
                  _LCD_customDelay_ms 0D62                         __Lmediumconst 0000  
                             int_func 087C                       LCD_print@length 0023  
                 ?_LCD_customDelay_ms 0017                               postdec1 000FE5  
                             postinc0 000FEE                               strlen@a 0019  
                             strlen@s 0017                             _PORTEbits 000F84  
             __end_of_LCD_clearScreen 0E9C                  ??_LCD_customDelay_ms 001B  
                          ?_LCD_print 001B                     __size_of_LCD_init 000A  
                 _doorController_fire 0CDA                   _doorController_init 09A2  
                       __pidataCOMRAM 0EF8    __end_of_doorController_openingDoor 0AF6  
          _doorController_openingDoor 0A72           ??_LCD_placeCursorInPosition 0017  
                      __end_of_strlen 0D62                   start_initialization 0E10  
                ?_doorController_fire 0001                  ?_doorController_init 0001  
                          LCD_print@i 0025                     __size_ofi2_strlen 003A  
                           i2strlen@a 0003                             i2strlen@s 0001  
  __size_of_interrupt_service_routine 099A                         LCD_print@text 001B  
                            ??_strlen 0019                      ?_LCD_clearScreen 0001  
               ??_doorController_fire 0011                 ??_doorController_init 0027  
         ?_doorController_closingDoor 0001             __size_of_interrupt_config 001C  
                       ??i2_LCD_print 000B                           ??_LCD_print 0021  
   LCD_placeCursorInPosition@position 0017   i2LCD_placeCursorInPosition@position 0001  
   __end_of_interrupt_service_routine 09A2          ?i2_LCD_placeCursorInPosition 0001  
           _LCD_placeCursorInPosition 0E3E                             __pintcode 0008  
        __end_ofi2_LCD_customDelay_ms 0E10                           __smallconst 0800  
                            _LCD_init 0EEE         ??i2_LCD_placeCursorInPosition 0001  
                 __end_ofi2_LCD_print 0C76                              _RCONbits 000FD0  
              i2LCD_customDelay_ms@ms 0001                              i2_strlen 0D9C  
                         _INTCON2bits 000FF1                           _INTCON3bits 000FF0  
                           copy_data0 0E24                              __Hrparam 0000  
                            __Lrparam 0000           ?_doorController_openingDoor 0001  
__size_ofi2_LCD_placeCursorInPosition 0020           __size_of_LCD_customDelay_ms 003A  
                            __ptext11 0A72                              __ptext12 0CDA  
                            __ptext13 0AF6                              __ptext14 0BF8  
                            __ptext15 0D9C                              __ptext16 0DD6  
                            __ptext17 0E5E                              __ptext18 0E9C  
                    _interrupt_config 0EBA                  i2_LCD_customDelay_ms 0DD6  
                         i2_LCD_print 0BF8                         __size_of_main 0018  
                            isa$xinst 000000                              int$flags 0031  
                          _LCD_config 0C76                            _INTCONbits 000FF2  
                            intlevel2 0000                 ?i2_LCD_customDelay_ms 0001  
                    LCD_config@config 0017                       LCD_config@F3330 0029  
         __end_of_doorController_fire 0D28           __end_of_doorController_init 0A72  
            __size_of_LCD_clearScreen 001E            ?_interrupt_service_routine 0001  
